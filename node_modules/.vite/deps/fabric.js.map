{
  "version": 3,
  "sources": ["browser-external:jsdom", "browser-external:jsdom/lib/jsdom/living/generated/utils", "browser-external:jsdom/lib/jsdom/utils", "../../fabric/dist/fabric.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"jsdom\" has been externalized for browser compatibility. Cannot access \"jsdom.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"jsdom/lib/jsdom/living/generated/utils\" has been externalized for browser compatibility. Cannot access \"jsdom/lib/jsdom/living/generated/utils.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"jsdom/lib/jsdom/utils\" has been externalized for browser compatibility. Cannot access \"jsdom/lib/jsdom/utils.${key}\" in client code.`)\n    }\n  }\n}))", "/* build: `node build.js modules=ALL exclude=gestures,accessors,erasing requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '5.2.4' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  }\n  else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n  var virtualWindow = new jsdom.JSDOM(\n    decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n    {\n      features: {\n        FetchExternalResources: ['img']\n      },\n      resources: 'usable'\n    }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path',\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)';\nfabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\nfabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.svgNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\nfabric.disableStyleCopyPaste = false;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to bezier conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function on(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  function _once(eventName, handler) {\n    var _handler = function () {\n      handler.apply(this, arguments);\n      this.off(eventName, _handler);\n    }.bind(this);\n    this.on(eventName, _handler);\n  }\n\n  function once(eventName, handler) {\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        _once.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _once.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function off(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @memberOf fabric.Observable\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    fire: fire,\n    on: on,\n    once: once,\n    off: off,\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function (object, deep) {\n    if (this._objects.indexOf(object) > -1) {\n      return true;\n    }\n    else if (deep) {\n      return this._objects.some(function (obj) {\n        return typeof obj.contains === 'function' && obj.contains(object, true);\n      });\n    }\n    return false;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      this._set(key, value);\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      var newPoint = new fabric.Point(point.x - origin.x, point.y - origin.y),\n          v = fabric.util.rotateVector(newPoint, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Creates a vetor from points represented as a point\n     * @static\n     * @memberOf fabric.util\n     *\n     * @typedef {Object} Point\n     * @property {number} x\n     * @property {number} y\n     *\n     * @param {Point} from\n     * @param {Point} to\n     * @returns {Point} vector\n     */\n    createVector: function (from, to) {\n      return new fabric.Point(to.x - from.x, to.y - from.y);\n    },\n\n    /**\n     * Calculates angle between 2 vectors using dot product\n     * @static\n     * @memberOf fabric.util\n     * @param {Point} a\n     * @param {Point} b\n     * @returns the angle in radian between the vectors\n     */\n    calcAngleBetweenVectors: function (a, b) {\n      return Math.acos((a.x * b.x + a.y * b.y) / (Math.hypot(a.x, a.y) * Math.hypot(b.x, b.y)));\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {Point} v\n     * @returns {Point} vector representing the unit vector of pointing to the direction of `v`\n     */\n    getHatVector: function (v) {\n      return new fabric.Point(v.x, v.y).multiply(1 / Math.hypot(v.x, v.y));\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {Point} A\n     * @param {Point} B\n     * @param {Point} C\n     * @returns {{ vector: Point, angle: number }} vector representing the bisector of A and A's angle\n     */\n    getBisector: function (A, B, C) {\n      var AB = fabric.util.createVector(A, B), AC = fabric.util.createVector(A, C);\n      var alpha = fabric.util.calcAngleBetweenVectors(AB, AC);\n      //  check if alpha is relative to AB->BC\n      var ro = fabric.util.calcAngleBetweenVectors(fabric.util.rotateVector(AB, alpha), AC);\n      var phi = alpha * (ro === 0 ? 1 : -1) / 2;\n      return {\n        vector: fabric.util.getHatVector(fabric.util.rotateVector(AB, phi)),\n        angle: alpha\n      };\n    },\n\n    /**\n     * Project stroke width on points returning 2 projections for each point as follows:\n     * - `miter`: 2 points corresponding to the outer boundary and the inner boundary of stroke.\n     * - `bevel`: 2 points corresponding to the bevel boundaries, tangent to the bisector.\n     * - `round`: same as `bevel`\n     * Used to calculate object's bounding box\n     * @static\n     * @memberOf fabric.util\n     * @param {Point[]} points\n     * @param {Object} options\n     * @param {number} options.strokeWidth\n     * @param {'miter'|'bevel'|'round'} options.strokeLineJoin\n     * @param {number} options.strokeMiterLimit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n     * @param {boolean} options.strokeUniform\n     * @param {number} options.scaleX\n     * @param {number} options.scaleY\n     * @param {boolean} [openPath] whether the shape is open or not, affects the calculations of the first and last points\n     * @returns {fabric.Point[]} array of size 2n/4n of all suspected points\n     */\n    projectStrokeOnPoints: function (points, options, openPath) {\n      var coords = [], s = options.strokeWidth / 2,\n          strokeUniformScalar = options.strokeUniform ?\n            new fabric.Point(1 / options.scaleX, 1 / options.scaleY) : new fabric.Point(1, 1),\n          getStrokeHatVector = function (v) {\n            var scalar = s / (Math.hypot(v.x, v.y));\n            return new fabric.Point(v.x * scalar * strokeUniformScalar.x, v.y * scalar * strokeUniformScalar.y);\n          };\n      if (points.length <= 1) {return coords;}\n      points.forEach(function (p, index) {\n        var A = new fabric.Point(p.x, p.y), B, C;\n        if (index === 0) {\n          C = points[index + 1];\n          B = openPath ? getStrokeHatVector(fabric.util.createVector(C, A)).addEquals(A) : points[points.length - 1];\n        }\n        else if (index === points.length - 1) {\n          B = points[index - 1];\n          C = openPath ? getStrokeHatVector(fabric.util.createVector(B, A)).addEquals(A) : points[0];\n        }\n        else {\n          B = points[index - 1];\n          C = points[index + 1];\n        }\n        var bisector = fabric.util.getBisector(A, B, C),\n            bisectorVector = bisector.vector,\n            alpha = bisector.angle,\n            scalar,\n            miterVector;\n        if (options.strokeLineJoin === 'miter') {\n          scalar = -s / Math.sin(alpha / 2);\n          miterVector = new fabric.Point(\n            bisectorVector.x * scalar * strokeUniformScalar.x,\n            bisectorVector.y * scalar * strokeUniformScalar.y\n          );\n          if (Math.hypot(miterVector.x, miterVector.y) / s <= options.strokeMiterLimit) {\n            coords.push(A.add(miterVector));\n            coords.push(A.subtract(miterVector));\n            return;\n          }\n        }\n        scalar = -s * Math.SQRT2;\n        miterVector = new fabric.Point(\n          bisectorVector.x * scalar * strokeUniformScalar.x,\n          bisectorVector.y * scalar * strokeUniformScalar.y\n        );\n        coords.push(A.add(miterVector));\n        coords.push(A.subtract(miterVector));\n      });\n      return coords;\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points, transform) {\n      if (transform) {\n        for (var i = 0; i < points.length; i++) {\n          points[i] = fabric.util.transformPoint(points[i], transform);\n        }\n      }\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img, false);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      // crossOrigin null is the same as not set.\n      if (url.indexOf('data') !== 0 &&\n        crossOrigin !== undefined &&\n        crossOrigin !== null) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function(obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n     * @see {@link fabric.Object.ENLIVEN_PROPS}\n     * @param {Object} object\n     * @param {Object} [context] assign enlived props to this object (pass null to skip this)\n     * @param {(objects:fabric.Object[]) => void} callback\n     */\n    enlivenObjectEnlivables: function (object, context, callback) {\n      var enlivenProps = fabric.Object.ENLIVEN_PROPS.filter(function (key) { return !!object[key]; });\n      fabric.util.enlivenObjects(enlivenProps.map(function (key) { return object[key]; }), function (enlivedProps) {\n        var objects = {};\n        enlivenProps.forEach(function (key, index) {\n          objects[key] = enlivedProps[index];\n          context && (context[key] = enlivedProps[index]);\n        });\n        callback && callback(objects);\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        if (typeof path !== 'undefined') {\n          elements[0].sourcePath = path;\n        }\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Array.isArray(properties)) {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x3 matrix into transform components\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle] angle in degrees\n     * @return {Number[]} transform matrix\n     */\n    calcRotateMatrix: function(options) {\n      if (!options.angle) {\n        return fabric.iMatrix.concat();\n      }\n      var theta = fabric.util.degreesToRadians(options.angle),\n          cos = fabric.util.cos(theta),\n          sin = fabric.util.sin(theta);\n      return [cos, sin, -sin, cos, 0, 0];\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet.\n     * is called DimensionsTransformMatrix because those properties are the one that influence\n     * the size of the resulting box of the object.\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewY]\n     * @return {Number[]} transform matrix\n     */\n    calcDimensionsMatrix: function(options) {\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\n          scaleMatrix = [\n            options.flipX ? -scaleX : scaleX,\n            0,\n            0,\n            options.flipY ? -scaleY : scaleY,\n            0,\n            0],\n          multiply = fabric.util.multiplyTransformMatrices,\n          degreesToRadians = fabric.util.degreesToRadians;\n      if (options.skewX) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, 0, Math.tan(degreesToRadians(options.skewX)), 1],\n          true);\n      }\n      if (options.skewY) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, Math.tan(degreesToRadians(options.skewY)), 0, 1],\n          true);\n      }\n      return scaleMatrix;\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle]\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.translateX]\n     * @param  {Number} [options.translateY]\n     * @return {Number[]} transform matrix\n     */\n    composeMatrix: function(options) {\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\n          multiply = fabric.util.multiplyTransformMatrices;\n      if (options.angle) {\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\n      }\n      if (options.scaleX !== 1 || options.scaleY !== 1 ||\n          options.skewX || options.skewY || options.flipX || options.flipY) {\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\n      }\n      return matrix;\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    /**\n     * Finds the scale for the object source to fit inside the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to fit into destination\n     */\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * Finds the scale for the object source to cover entirely the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to cover destination\n     */\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} transform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function(transform) {\n      return 'matrix(' + transform.map(function(value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    },\n\n    /**\n     * given an object and a transform, apply the inverse transform to the object,\n     * this is equivalent to remove from that object that transformation, so that\n     * added in a space with the removed transform, the object will be the same as before.\n     * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n     * Removing from an object a transfrom that rotate by 30deg is like rotating by 30deg\n     * in the opposite direction.\n     * This util is used to add objects inside transformed groups or nested groups.\n     * @memberOf fabric.util\n     * @param {fabric.Object} object the object you want to transform\n     * @param {Array} transform the destination transform\n     */\n    removeTransformFromObject: function(object, transform) {\n      var inverted = fabric.util.invertTransform(transform),\n          finalTransform = fabric.util.multiplyTransformMatrices(inverted, object.calcOwnMatrix());\n      fabric.util.applyTransformToObject(object, finalTransform);\n    },\n\n    /**\n     * given an object and a transform, apply the transform to the object.\n     * this is equivalent to change the space where the object is drawn.\n     * Adding to an object a transform that scale by 2 is like scaling it by 2.\n     * This is used when removing an object from an active selection for example.\n     * @memberOf fabric.util\n     * @param {fabric.Object} object the object you want to transform\n     * @param {Array} transform the destination transform\n     */\n    addTransformToObject: function(object, transform) {\n      fabric.util.applyTransformToObject(\n        object,\n        fabric.util.multiplyTransformMatrices(transform, object.calcOwnMatrix())\n      );\n    },\n\n    /**\n     * discard an object transform state and apply the one from the matrix.\n     * @memberOf fabric.util\n     * @param {fabric.Object} object the object you want to transform\n     * @param {Array} transform the destination transform\n     */\n    applyTransformToObject: function(object, transform) {\n      var options = fabric.util.qrDecompose(transform),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * given a width and height, return the size of the bounding box\n     * that can contains the box with width/height with applied transform\n     * described in options.\n     * Use to calculate the boxes around objects for controls.\n     * @memberOf fabric.util\n     * @param {Number} width\n     * @param {Number} height\n     * @param {Object} options\n     * @param {Number} options.scaleX\n     * @param {Number} options.scaleY\n     * @param {Number} options.skewX\n     * @param {Number} options.skewY\n     * @return {Object.x} width of containing\n     * @return {Object.y} height of containing\n     */\n    sizeAfterTransform: function(width, height, options) {\n      var dimX = width / 2, dimY = height / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          transformMatrix = fabric.util.calcDimensionsMatrix(options),\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\n      return {\n        x: bbox.width,\n        y: bbox.height,\n      };\n    },\n\n    /**\n     * Merges 2 clip paths into one visually equal clip path\n     *\n     * **IMPORTANT**:\\\n     * Does **NOT** clone the arguments, clone them proir if necessary.\n     *\n     * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n     * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n     *\n     * In order to handle the `inverted` property we follow logic described in the following cases:\\\n     * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n     * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n     * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n     *\n     * @memberOf fabric.util\n     * @param {fabric.Object} c1\n     * @param {fabric.Object} c2\n     * @returns {fabric.Object} merged clip path\n     */\n    mergeClipPaths: function (c1, c2) {\n      var a = c1, b = c2;\n      if (a.inverted && !b.inverted) {\n        //  case (2)\n        a = c2;\n        b = c1;\n      }\n      //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n      fabric.util.applyTransformToObject(\n        b,\n        fabric.util.multiplyTransformMatrices(\n          fabric.util.invertTransform(a.calcTransformMatrix()),\n          b.calcTransformMatrix()\n        )\n      );\n      //  assign the `inverted` prop to the wrapping group\n      var inverted = a.inverted && b.inverted;\n      if (inverted) {\n        //  case (1)\n        a.inverted = b.inverted = false;\n      }\n      return new fabric.Group([a], { clipPath: b, inverted: inverted });\n    },\n\n    /**\n     * @memberOf fabric.util\n     * @param {Object} prevStyle first style to compare\n     * @param {Object} thisStyle second style to compare\n     * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n     * @return {boolean} true if the style changed\n     */\n    hasStyleChanged: function(prevStyle, thisStyle, forTextSpans) {\n      forTextSpans = forTextSpans || false;\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY) ||\n              (forTextSpans &&\n                (prevStyle.overline !== thisStyle.overline ||\n                prevStyle.underline !== thisStyle.underline ||\n                prevStyle.linethrough !== thisStyle.linethrough));\n    },\n\n    /**\n     * Returns the array form of a text object's inline styles property with styles grouped in ranges\n     * rather than per character. This format is less verbose, and is better suited for storage\n     * so it is used in serialization (not during runtime).\n     * @memberOf fabric.util\n     * @param {object} styles per character styles for a text object\n     * @param {String} text the text string that the styles are applied to\n     * @return {{start: number, end: number, style: object}[]}\n     */\n    stylesToArray: function(styles, text) {\n      // clone style structure to prevent mutation\n      var styles = fabric.util.object.clone(styles, true),\n          textLines = text.split('\\n'),\n          charIndex = -1, prevStyle = {}, stylesArray = [];\n      //loop through each textLine\n      for (var i = 0; i < textLines.length; i++) {\n        if (!styles[i]) {\n          //no styles exist for this line, so add the line's length to the charIndex total\n          charIndex += textLines[i].length;\n          continue;\n        }\n        //loop through each character of the current line\n        for (var c = 0; c < textLines[i].length; c++) {\n          charIndex++;\n          var thisStyle = styles[i][c];\n          //check if style exists for this character\n          if (thisStyle) {\n            var styleChanged = fabric.util.hasStyleChanged(prevStyle, thisStyle, true);\n            if (styleChanged) {\n              stylesArray.push({\n                start: charIndex,\n                end: charIndex + 1,\n                style: thisStyle\n              });\n            }\n            else {\n              //if style is the same as previous character, increase end index\n              stylesArray[stylesArray.length - 1].end++;\n            }\n          }\n          prevStyle = thisStyle || {};\n        }\n      }\n      return stylesArray;\n    },\n\n    /**\n     * Returns the object form of the styles property with styles that are assigned per\n     * character rather than grouped by range. This format is more verbose, and is\n     * only used during runtime (not for serialization/storage)\n     * @memberOf fabric.util\n     * @param {Array} styles the serialized form of a text object's styles\n     * @param {String} text the text string that the styles are applied to\n     * @return {Object}\n     */\n    stylesFromArray: function(styles, text) {\n      if (!Array.isArray(styles)) {\n        return styles;\n      }\n      var textLines = text.split('\\n'),\n          charIndex = -1, styleIndex = 0, stylesObject = {};\n      //loop through each textLine\n      for (var i = 0; i < textLines.length; i++) {\n        //loop through each character of the current line\n        for (var c = 0; c < textLines[i].length; c++) {\n          charIndex++;\n          //check if there's a style collection that includes the current character\n          if (styles[styleIndex]\n            && styles[styleIndex].start <= charIndex\n            && charIndex < styles[styleIndex].end) {\n            //create object for line index if it doesn't exist\n            stylesObject[i] = stylesObject[i] || {};\n            //assign a style at this character's index\n            stylesObject[i][c] = Object.assign({}, styles[styleIndex].style);\n            //if character is at the end of the current style collection, move to the next\n            if (charIndex === styles[styleIndex].end - 1) {\n              styleIndex++;\n            }\n          }\n        }\n      }\n      return stylesObject;\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  var _join = Array.prototype.join,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return ['C',\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][5];\n      fromY = result[i][6];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    return result;\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of bezier\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  // TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts arc to a bunch of bezier curves\n   * @param {Number} fx starting point x\n   * @param {Number} fy starting point y\n   * @param {Array} coords Arc command\n   */\n  function fromArcToBeziers(fx, fy, coords) {\n    var rx = coords[1],\n        ry = coords[2],\n        rot = coords[3],\n        large = coords[4],\n        sweep = coords[5],\n        tx = coords[6],\n        ty = coords[7],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segsNorm[i][1] += fx;\n      segsNorm[i][2] += fy;\n      segsNorm[i][3] += fx;\n      segsNorm[i][4] += fy;\n      segsNorm[i][5] += fx;\n      segsNorm[i][6] += fy;\n    }\n    return segsNorm;\n  };\n\n  /**\n   * This function take a parsed SVG path and make it simpler for fabricJS logic.\n   * simplification consist of: only UPPERCASE absolute commands ( relative converted to absolute )\n   * S converted in C, T converted in Q, A converted in C.\n   * @param {Array} path the array of commands of a parsed svg path for fabric.Path\n   * @return {Array} the simplified array of commands of a parsed svg path for fabric.Path\n   */\n  function makePathSimpler(path) {\n    // x and y represent the last point of the path. the previous command point.\n    // we add them to each relative command to make it an absolute comment.\n    // we also swap the v V h H with L, because are easier to transform.\n    var x = 0, y = 0, len = path.length,\n        // x1 and y1 represent the last point of the subpath. the subpath is started with\n        // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n        // the last x1 and y1.\n        x1 = 0, y1 = 0, current, i, converted,\n        // previous will host the letter of the previous command, to handle S and T.\n        // controlX and controlY will host the previous reflected control point\n        destinationPath = [], previous, controlX, controlY;\n    for (i = 0; i < len; ++i) {\n      converted = false;\n      current = path[i].slice(0);\n      switch (current[0]) { // first letter\n        case 'l': // lineto, relative\n          current[0] = 'L';\n          current[1] += x;\n          current[2] += y;\n          // falls through\n        case 'L':\n          x = current[1];\n          y = current[2];\n          break;\n        case 'h': // horizontal lineto, relative\n          current[1] += x;\n          // falls through\n        case 'H':\n          current[0] = 'L';\n          current[2] = y;\n          x = current[1];\n          break;\n        case 'v': // vertical lineto, relative\n          current[1] += y;\n          // falls through\n        case 'V':\n          current[0] = 'L';\n          y = current[1];\n          current[1] = x;\n          current[2] = y;\n          break;\n        case 'm': // moveTo, relative\n          current[0] = 'M';\n          current[1] += x;\n          current[2] += y;\n          // falls through\n        case 'M':\n          x = current[1];\n          y = current[2];\n          x1 = current[1];\n          y1 = current[2];\n          break;\n        case 'c': // bezierCurveTo, relative\n          current[0] = 'C';\n          current[1] += x;\n          current[2] += y;\n          current[3] += x;\n          current[4] += y;\n          current[5] += x;\n          current[6] += y;\n          // falls through\n        case 'C':\n          controlX = current[3];\n          controlY = current[4];\n          x = current[5];\n          y = current[6];\n          break;\n        case 's': // shorthand cubic bezierCurveTo, relative\n          current[0] = 'S';\n          current[1] += x;\n          current[2] += y;\n          current[3] += x;\n          current[4] += y;\n          // falls through\n        case 'S':\n          // would be sScC but since we are swapping sSc for C, we check just that.\n          if (previous === 'C') {\n            // calculate reflection of previous control points\n            controlX = 2 * x - controlX;\n            controlY = 2 * y - controlY;\n          }\n          else {\n            // If there is no previous command or if the previous command was not a C, c, S, or s,\n            // the control point is coincident with the current point\n            controlX = x;\n            controlY = y;\n          }\n          x = current[3];\n          y = current[4];\n          current[0] = 'C';\n          current[5] = current[3];\n          current[6] = current[4];\n          current[3] = current[1];\n          current[4] = current[2];\n          current[1] = controlX;\n          current[2] = controlY;\n          // current[3] and current[4] are NOW the second control point.\n          // we keep it for the next reflection.\n          controlX = current[3];\n          controlY = current[4];\n          break;\n        case 'q': // quadraticCurveTo, relative\n          current[0] = 'Q';\n          current[1] += x;\n          current[2] += y;\n          current[3] += x;\n          current[4] += y;\n          // falls through\n        case 'Q':\n          controlX = current[1];\n          controlY = current[2];\n          x = current[3];\n          y = current[4];\n          break;\n        case 't': // shorthand quadraticCurveTo, relative\n          current[0] = 'T';\n          current[1] += x;\n          current[2] += y;\n          // falls through\n        case 'T':\n          if (previous === 'Q') {\n            // calculate reflection of previous control point\n            controlX = 2 * x - controlX;\n            controlY = 2 * y - controlY;\n          }\n          else {\n            // If there is no previous command or if the previous command was not a Q, q, T or t,\n            // assume the control point is coincident with the current point\n            controlX = x;\n            controlY = y;\n          }\n          current[0] = 'Q';\n          x = current[1];\n          y = current[2];\n          current[1] = controlX;\n          current[2] = controlY;\n          current[3] = x;\n          current[4] = y;\n          break;\n        case 'a':\n          current[0] = 'A';\n          current[6] += x;\n          current[7] += y;\n          // falls through\n        case 'A':\n          converted = true;\n          destinationPath = destinationPath.concat(fromArcToBeziers(x, y, current));\n          x = current[6];\n          y = current[7];\n          break;\n        case 'z':\n        case 'Z':\n          x = x1;\n          y = y1;\n          break;\n        default:\n      }\n      if (!converted) {\n        destinationPath.push(current);\n      }\n      previous = current[0];\n    }\n    return destinationPath;\n  };\n\n  /**\n   * Calc length from point x1,y1 to x2,y2\n   * @param {Number} x1 starting point x\n   * @param {Number} y1 starting point y\n   * @param {Number} x2 starting point x\n   * @param {Number} y2 starting point y\n   * @return {Number} length of segment\n   */\n  function calcLineLength(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n\n  // functions for the Cubic beizer\n  // taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\n  function CB1(t) {\n    return t * t * t;\n  }\n  function CB2(t) {\n    return 3 * t * t * (1 - t);\n  }\n  function CB3(t) {\n    return 3 * t * (1 - t) * (1 - t);\n  }\n  function CB4(t) {\n    return (1 - t) * (1 - t) * (1 - t);\n  }\n\n  function getPointOnCubicBezierIterator(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n    return function(pct) {\n      var c1 = CB1(pct), c2 = CB2(pct), c3 = CB3(pct), c4 = CB4(pct);\n      return {\n        x: p4x * c1 + p3x * c2 + p2x * c3 + p1x * c4,\n        y: p4y * c1 + p3y * c2 + p2y * c3 + p1y * c4\n      };\n    };\n  }\n\n  function getTangentCubicIterator(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n    return function (pct) {\n      var invT = 1 - pct,\n          tangentX = (3 * invT * invT * (p2x - p1x)) + (6 * invT * pct * (p3x - p2x)) +\n          (3 * pct * pct * (p4x - p3x)),\n          tangentY = (3 * invT * invT * (p2y - p1y)) + (6 * invT * pct * (p3y - p2y)) +\n          (3 * pct * pct * (p4y - p3y));\n      return Math.atan2(tangentY, tangentX);\n    };\n  }\n\n  function QB1(t) {\n    return t * t;\n  }\n\n  function QB2(t) {\n    return 2 * t * (1 - t);\n  }\n\n  function QB3(t) {\n    return (1 - t) * (1 - t);\n  }\n\n  function getPointOnQuadraticBezierIterator(p1x, p1y, p2x, p2y, p3x, p3y) {\n    return function(pct) {\n      var c1 = QB1(pct), c2 = QB2(pct), c3 = QB3(pct);\n      return {\n        x: p3x * c1 + p2x * c2 + p1x * c3,\n        y: p3y * c1 + p2y * c2 + p1y * c3\n      };\n    };\n  }\n\n  function getTangentQuadraticIterator(p1x, p1y, p2x, p2y, p3x, p3y) {\n    return function (pct) {\n      var invT = 1 - pct,\n          tangentX = (2 * invT * (p2x - p1x)) + (2 * pct * (p3x - p2x)),\n          tangentY = (2 * invT * (p2y - p1y)) + (2 * pct * (p3y - p2y));\n      return Math.atan2(tangentY, tangentX);\n    };\n  }\n\n\n  // this will run over a path segment ( a cubic or quadratic segment) and approximate it\n  // with 100 segemnts. This will good enough to calculate the length of the curve\n  function pathIterator(iterator, x1, y1) {\n    var tempP = { x: x1, y: y1 }, p, tmpLen = 0, perc;\n    for (perc = 1; perc <= 100; perc += 1) {\n      p = iterator(perc / 100);\n      tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n      tempP = p;\n    }\n    return tmpLen;\n  }\n\n  /**\n   * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n   * that correspond to that pixels run over the path.\n   * The percentage will be then used to find the correct point on the canvas for the path.\n   * @param {Array} segInfo fabricJS collection of information on a parsed path\n   * @param {Number} distance from starting point, in pixels.\n   * @return {Object} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n   */\n  function findPercentageForDistance(segInfo, distance) {\n    var perc = 0, tmpLen = 0, iterator = segInfo.iterator, tempP = { x: segInfo.x, y: segInfo.y },\n        p, nextLen, nextStep = 0.01, angleFinder = segInfo.angleFinder, lastPerc;\n    // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n    // the path\n    while (tmpLen < distance && nextStep > 0.0001) {\n      p = iterator(perc);\n      lastPerc = perc;\n      nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n      // compare tmpLen each cycle with distance, decide next perc to test.\n      if ((nextLen + tmpLen) > distance) {\n        // we discard this step and we make smaller steps.\n        perc -= nextStep;\n        nextStep /= 2;\n      }\n      else {\n        tempP = p;\n        perc += nextStep;\n        tmpLen += nextLen;\n      }\n    }\n    p.angle = angleFinder(lastPerc);\n    return p;\n  }\n\n  /**\n   * Run over a parsed and simplifed path and extrac some informations.\n   * informations are length of each command and starting point\n   * @param {Array} path fabricJS parsed path commands\n   * @return {Array} path commands informations\n   */\n  function getPathSegmentsInfo(path) {\n    var totalLength = 0, len = path.length, current,\n        //x2 and y2 are the coords of segment start\n        //x1 and y1 are the coords of the current point\n        x1 = 0, y1 = 0, x2 = 0, y2 = 0, info = [], iterator, tempInfo, angleFinder;\n    for (var i = 0; i < len; i++) {\n      current = path[i];\n      tempInfo = {\n        x: x1,\n        y: y1,\n        command: current[0],\n      };\n      switch (current[0]) { //first letter\n        case 'M':\n          tempInfo.length = 0;\n          x2 = x1 = current[1];\n          y2 = y1 = current[2];\n          break;\n        case 'L':\n          tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n          x1 = current[1];\n          y1 = current[2];\n          break;\n        case 'C':\n          iterator = getPointOnCubicBezierIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4],\n            current[5],\n            current[6]\n          );\n          angleFinder = getTangentCubicIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4],\n            current[5],\n            current[6]\n          );\n          tempInfo.iterator = iterator;\n          tempInfo.angleFinder = angleFinder;\n          tempInfo.length = pathIterator(iterator, x1, y1);\n          x1 = current[5];\n          y1 = current[6];\n          break;\n        case 'Q':\n          iterator = getPointOnQuadraticBezierIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4]\n          );\n          angleFinder = getTangentQuadraticIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4]\n          );\n          tempInfo.iterator = iterator;\n          tempInfo.angleFinder = angleFinder;\n          tempInfo.length = pathIterator(iterator, x1, y1);\n          x1 = current[3];\n          y1 = current[4];\n          break;\n        case 'Z':\n        case 'z':\n          // we add those in order to ease calculations later\n          tempInfo.destX = x2;\n          tempInfo.destY = y2;\n          tempInfo.length = calcLineLength(x1, y1, x2, y2);\n          x1 = x2;\n          y1 = y2;\n          break;\n      }\n      totalLength += tempInfo.length;\n      info.push(tempInfo);\n    }\n    info.push({ length: totalLength, x: x1, y: y1 });\n    return info;\n  }\n\n  function getPointOnPath(path, distance, infos) {\n    if (!infos) {\n      infos = getPathSegmentsInfo(path);\n    }\n    var i = 0;\n    while ((distance - infos[i].length > 0) && i < (infos.length - 2)) {\n      distance -= infos[i].length;\n      i++;\n    }\n    // var distance = infos[infos.length - 1] * perc;\n    var segInfo = infos[i], segPercent = distance / segInfo.length,\n        command = segInfo.command, segment = path[i], info;\n\n    switch (command) {\n      case 'M':\n        return { x: segInfo.x, y: segInfo.y, angle: 0 };\n      case 'Z':\n      case 'z':\n        info = new fabric.Point(segInfo.x, segInfo.y).lerp(\n          new fabric.Point(segInfo.destX, segInfo.destY),\n          segPercent\n        );\n        info.angle = Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x);\n        return info;\n      case 'L':\n        info = new fabric.Point(segInfo.x, segInfo.y).lerp(\n          new fabric.Point(segment[1], segment[2]),\n          segPercent\n        );\n        info.angle = Math.atan2(segment[2] - segInfo.y, segment[1] - segInfo.x);\n        return info;\n      case 'C':\n        return findPercentageForDistance(segInfo, distance);\n      case 'Q':\n        return findPercentageForDistance(segInfo, distance);\n    }\n  }\n\n  /**\n   *\n   * @param {string} pathString\n   * @return {(string|number)[][]} An array of SVG path commands\n   * @example <caption>Usage</caption>\n   * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n   *   ['M', 3, 4],\n   *   ['Q', 3, 5, 2, 1, 4, 0],\n   *   ['Q', 9, 12, 2, 1, 4, 0],\n   * ];\n   *\n   */\n  function parsePath(pathString) {\n    var result = [],\n        coords = [],\n        currentPath,\n        parsed,\n        re = fabric.rePathCommand,\n        rNumber = '[-+]?(?:\\\\d*\\\\.\\\\d+|\\\\d+\\\\.?)(?:[eE][-+]?\\\\d+)?\\\\s*',\n        rNumberCommaWsp = '(' + rNumber + ')' + fabric.commaWsp,\n        rFlagCommaWsp = '([01])' + fabric.commaWsp + '?',\n        rArcSeq = rNumberCommaWsp + '?' + rNumberCommaWsp + '?' + rNumberCommaWsp + rFlagCommaWsp + rFlagCommaWsp +\n          rNumberCommaWsp + '?(' + rNumber + ')',\n        regArcArgumentSequence = new RegExp(rArcSeq, 'g'),\n        match,\n        coordsStr,\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        path;\n    if (!pathString || !pathString.match) {\n      return result;\n    }\n    path = pathString.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n    for (var i = 0, coordsParsed, len = path.length; i < len; i++) {\n      currentPath = path[i];\n\n      coordsStr = currentPath.slice(1).trim();\n      coords.length = 0;\n\n      var command = currentPath.charAt(0);\n      coordsParsed = [command];\n\n      if (command.toLowerCase() === 'a') {\n        // arcs have special flags that apparently don't require spaces so handle special\n        for (var args; (args = regArcArgumentSequence.exec(coordsStr));) {\n          for (var j = 1; j < args.length; j++) {\n            coords.push(args[j]);\n          }\n        }\n      }\n      else {\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n      }\n\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        parsed = parseFloat(coords[j]);\n        if (!isNaN(parsed)) {\n          coordsParsed.push(parsed);\n        }\n      }\n\n      var commandLength = commandLengths[command.toLowerCase()],\n          repeatedCommand = repeatedCommands[command] || command;\n\n      if (coordsParsed.length - 1 > commandLength) {\n        for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n          result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n          command = repeatedCommand;\n        }\n      }\n      else {\n        result.push(coordsParsed);\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   *\n   * Converts points to a smooth SVG path\n   * @param {{ x: number,y: number }[]} points Array of points\n   * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n   * @return {(string|number)[][]} An array of SVG path commands\n   */\n  function getSmoothPathFromPoints(points, correction) {\n    var path = [], i,\n        p1 = new fabric.Point(points[0].x, points[0].y),\n        p2 = new fabric.Point(points[1].x, points[1].y),\n        len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\n    correction = correction || 0;\n\n    if (manyPoints) {\n      multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n      multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n    }\n    path.push(['M', p1.x - multSignX * correction, p1.y - multSignY * correction]);\n    for (i = 1; i < len; i++) {\n      if (!p1.eq(p2)) {\n        var midPoint = p1.midPointFrom(p2);\n        // p1 is our bezier control point\n        // midpoint is our endpoint\n        // start point is p(i-1) value.\n        path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n      }\n      p1 = points[i];\n      if ((i + 1) < points.length) {\n        p2 = points[i + 1];\n      }\n    }\n    if (manyPoints) {\n      multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n      multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n    }\n    path.push(['L', p1.x + multSignX * correction, p1.y + multSignY * correction]);\n    return path;\n  }\n  /**\n   * Transform a path by transforming each segment.\n   * it has to be a simplified path or it won't work.\n   * WARNING: this depends from pathOffset for correct operation\n   * @param {Array} path fabricJS parsed and simplified path commands\n   * @param {Array} transform matrix that represent the transformation\n   * @param {Object} [pathOffset] the fabric.Path pathOffset\n   * @param {Number} pathOffset.x\n   * @param {Number} pathOffset.y\n   * @returns {Array} the transformed path\n   */\n  function transformPath(path, transform, pathOffset) {\n    if (pathOffset) {\n      transform = fabric.util.multiplyTransformMatrices(\n        transform,\n        [1, 0, 0, 1, -pathOffset.x, -pathOffset.y]\n      );\n    }\n    return path.map(function(pathSegment) {\n      var newSegment = pathSegment.slice(0), point = {};\n      for (var i = 1; i < pathSegment.length - 1; i += 2) {\n        point.x = pathSegment[i];\n        point.y = pathSegment[i + 1];\n        point = fabric.util.transformPoint(point, transform);\n        newSegment[i] = point.x;\n        newSegment[i + 1] = point.y;\n      }\n      return newSegment;\n    });\n  }\n\n  /**\n   * Join path commands to go back to svg format\n   * @param {Array} pathData fabricJS parsed path commands\n   * @return {String} joined path 'M 0 0 L 20 30'\n   */\n  fabric.util.joinPath = function(pathData) {\n    return pathData.map(function (segment) { return segment.join(' '); }).join(' ');\n  };\n  fabric.util.parsePath = parsePath;\n  fabric.util.makePathSimpler = makePathSimpler;\n  fabric.util.getSmoothPathFromPoints = getSmoothPathFromPoints;\n  fabric.util.getPathSegmentsInfo = getPathSegmentsInfo;\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n  fabric.util.getPointOnPath = getPointOnPath;\n  fabric.util.transformPath = transformPath;\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas and group properties in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @param {Boolean} [deep] Whether to extend nested objects\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas' || property === 'group') {\n            // we do not want to clone this props at all.\n            // we want to keep the keys in the copy\n            destination[property] = null;\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * This method is mostly for internal use, and not intended for duplicating shapes in canvas. \n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @param {Boolean} [deep] Whether to clone nested objects\n   * @return {Object}\n   */\n\n  //TODO: this function return an empty object if you try to clone null\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n  // since ie11 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent,\n      touchEvents = ['touchstart', 'touchmove', 'touchend'];\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = function(element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = function(element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n    return event;\n  }\n\n  fabric.util.getPointer = function(event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n\n  fabric.util.isTouchEvent = function(event) {\n    return touchEvents.indexOf(event.type) > -1 || event.pointerType === 'touch';\n  };\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle.setProperty(normalizedProperty, styles[property]);\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  function setImageSmoothing(ctx, value) {\n    ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n      || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n    ctx.imageSmoothingEnabled = value;\n  }\n\n  /**\n   * setImageSmoothing sets the context imageSmoothingEnabled property.\n   * Used by canvas and by ImageObject.\n   * @memberOf fabric.util\n   * @since 4.0.0\n   * @param {HTMLRenderingContext2D} ctx to set on\n   * @param {Boolean} value true or false\n   */\n  fabric.util.setImageSmoothing = setImageSmoothing;\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.addClass = addClass;\n  fabric.util.makeElement = makeElement;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = console.log;\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = console.warn;\n\n\n(function () {\n\n  var extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone;\n\n  /**\n   * @typedef {Object} AnimationOptions\n   * Animation of a value or list of values.\n   * When using lists, think of something like this:\n   * fabric.util.animate({\n   *   startValue: [1, 2, 3],\n   *   endValue: [2, 4, 6],\n   *   onChange: function([a, b, c]) {\n   *     canvas.zoomToPoint({x: b, y: c}, a)\n   *     canvas.renderAll()\n   *   }\n   * });\n   * @example\n   * @property {Function} [onChange] Callback; invoked on every value change\n   * @property {Function} [onComplete] Callback; invoked when value change is completed\n   * @example\n   * // Note: startValue, endValue, and byValue must match the type\n   * var animationOptions = { startValue: 0, endValue: 1, byValue: 0.25 }\n   * var animationOptions = { startValue: [0, 1], endValue: [1, 2], byValue: [0.25, 0.25] }\n   * @property {number | number[]} [startValue=0] Starting value\n   * @property {number | number[]} [endValue=100] Ending value\n   * @property {number | number[]} [byValue=100] Value to modify the property by\n   * @property {Function} [easing] Easing function\n   * @property {Number} [duration=500] Duration of change (in ms)\n   * @property {Function} [abort] Additional function with logic. If returns true, animation aborts.\n   *\n   * @typedef {() => void} CancelFunction\n   *\n   * @typedef {Object} AnimationCurrentState\n   * @property {number | number[]} currentValue value in range [`startValue`, `endValue`]\n   * @property {number} completionRate value in range [0, 1]\n   * @property {number} durationRate value in range [0, 1]\n   *\n   * @typedef {(AnimationOptions & AnimationCurrentState & { cancel: CancelFunction }} AnimationContext\n   */\n\n  /**\n   * Array holding all running animations\n   * @memberof fabric\n   * @type {AnimationContext[]}\n   */\n  var RUNNING_ANIMATIONS = [];\n  fabric.util.object.extend(RUNNING_ANIMATIONS, {\n\n    /**\n     * cancel all running animations at the next requestAnimFrame\n     * @returns {AnimationContext[]}\n     */\n    cancelAll: function () {\n      var animations = this.splice(0);\n      animations.forEach(function (animation) {\n        animation.cancel();\n      });\n      return animations;\n    },\n\n    /**\n     * cancel all running animations attached to canvas at the next requestAnimFrame\n     * @param {fabric.Canvas} canvas\n     * @returns {AnimationContext[]}\n     */\n    cancelByCanvas: function (canvas) {\n      if (!canvas) {\n        return [];\n      }\n      var cancelled = this.filter(function (animation) {\n        return typeof animation.target === 'object' && animation.target.canvas === canvas;\n      });\n      cancelled.forEach(function (animation) {\n        animation.cancel();\n      });\n      return cancelled;\n    },\n\n    /**\n     * cancel all running animations for target at the next requestAnimFrame\n     * @param {*} target\n     * @returns {AnimationContext[]}\n     */\n    cancelByTarget: function (target) {\n      var cancelled = this.findAnimationsByTarget(target);\n      cancelled.forEach(function (animation) {\n        animation.cancel();\n      });\n      return cancelled;\n    },\n\n    /**\n     *\n     * @param {CancelFunction} cancelFunc the function returned by animate\n     * @returns {number}\n     */\n    findAnimationIndex: function (cancelFunc) {\n      return this.indexOf(this.findAnimation(cancelFunc));\n    },\n\n    /**\n     *\n     * @param {CancelFunction} cancelFunc the function returned by animate\n     * @returns {AnimationContext | undefined} animation's options object\n     */\n    findAnimation: function (cancelFunc) {\n      return this.find(function (animation) {\n        return animation.cancel === cancelFunc;\n      });\n    },\n\n    /**\n     *\n     * @param {*} target the object that is assigned to the target property of the animation context\n     * @returns {AnimationContext[]} array of animation options object associated with target\n     */\n    findAnimationsByTarget: function (target) {\n      if (!target) {\n        return [];\n      }\n      return this.filter(function (animation) {\n        return animation.target === target;\n      });\n    }\n  });\n\n  function noop() {\n    return false;\n  }\n\n  function defaultEasing(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {AnimationOptions} [options] Animation options\n   * @example\n   * // Note: startValue, endValue, and byValue must match the type\n   * fabric.util.animate({ startValue: 0, endValue: 1, byValue: 0.25 })\n   * fabric.util.animate({ startValue: [0, 1], endValue: [1, 2], byValue: [0.25, 0.25] })\n   * @returns {CancelFunction} cancel function\n   */\n  function animate(options) {\n    options || (options = {});\n    var cancel = false,\n        context,\n        removeFromRegistry = function () {\n          var index = fabric.runningAnimations.indexOf(context);\n          return index > -1 && fabric.runningAnimations.splice(index, 1)[0];\n        };\n\n    context = extend(clone(options), {\n      cancel: function () {\n        cancel = true;\n        return removeFromRegistry();\n      },\n      currentValue: 'startValue' in options ? options.startValue : 0,\n      completionRate: 0,\n      durationRate: 0\n    });\n    fabric.runningAnimations.push(context);\n\n    requestAnimFrame(function(timestamp) {\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || defaultEasing,\n          isMany = 'startValue' in options ? options.startValue.length > 0 : false,\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || (isMany ? startValue.map(function(value, i) {\n            return endValue[i] - startValue[i];\n          }) : endValue - startValue);\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = isMany ? startValue.map(function(_value, i) {\n              return easing(currentTime, startValue[i], byValue[i], duration);\n            }) : easing(currentTime, startValue, byValue, duration),\n            valuePerc = isMany ? Math.abs((current[0] - startValue[0]) / byValue[0])\n              : Math.abs((current - startValue) / byValue);\n        //  update context\n        context.currentValue = isMany ? current.slice() : current;\n        context.completionRate = valuePerc;\n        context.durationRate = timePerc;\n        if (cancel) {\n          return;\n        }\n        if (abort(current, valuePerc, timePerc)) {\n          removeFromRegistry();\n          return;\n        }\n        if (time > finish) {\n          //  update context\n          context.currentValue = isMany ? endValue.slice() : endValue;\n          context.completionRate = 1;\n          context.durationRate = 1;\n          //  execute callbacks\n          onChange(isMany ? endValue.slice() : endValue, 1, 1);\n          onComplete(endValue, 1, 1);\n          removeFromRegistry();\n          return;\n        }\n        else {\n          onChange(current, valuePerc, timePerc);\n          requestAnimFrame(tick);\n        }\n      })(start);\n    });\n\n    return context.cancel;\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n  fabric.runningAnimations = RUNNING_ANIMATIONS;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   * @returns {Function} abort function\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource(),\n        originalOnComplete = options.onComplete,\n        originalOnChange = options.onChange;\n    options = options || {};\n\n    return fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      },\n      // has to take in account for color restoring;\n      onComplete: function(current, valuePerc, timePerc) {\n        if (originalOnComplete) {\n          return originalOnComplete(\n            calculateColor(endColor, endColor, 0),\n            valuePerc,\n            timePerc\n          );\n        }\n      },\n      onChange: function(current, valuePerc, timePerc) {\n        if (originalOnChange) {\n          if (Array.isArray(current)) {\n            return originalOnChange(\n              calculateColor(current, current, 0),\n              valuePerc,\n              timePerc\n            );\n          }\n          originalOnChange(current, valuePerc, timePerc);\n        }\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform',\n        'image-rendering':    'imageSmoothing',\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      },\n\n      fSize = 'font-size', cPath = 'clip-path';\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Array.isArray(value), parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeUniform') {\n      return (value === 'non-scaling-stroke');\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href' || attr === 'font') {\n      return value;\n    }\n    else if (attr === 'imageSmoothing') {\n      return (value === 'optimizeQuality');\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = fabric.commaWsp,\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlinkAttribute = el.getAttribute('xlink:href') || el.getAttribute('href');\n\n      if (xlinkAttribute === null) {\n        return;\n      }\n\n      var xlink = xlinkAttribute.slice(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode,\n          oldLength = nodelist.length, attr,\n          j,\n          attrs,\n          len,\n          namespace = fabric.svgNS;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n    if (!fabric.svgViewBoxElementsRegEx.test(element.nodeName)) {\n      return {};\n    }\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (missingViewBox) {\n      if (((x || y) && element.parentNode && element.parentNode.nodeName !== '#document')) {\n        translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n        matrix = (element.getAttribute('transform') || '') + translateMatrix;\n        element.setAttribute('transform', matrix);\n        element.removeAttribute('x');\n        element.removeAttribute('y');\n      }\n    }\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      // set a transform for elements that have x y and are inner(only) SVGs\n      return parsedDim;\n    }\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n    parsedDim.minX = minX;\n    parsedDim.minY = minY;\n    parsedDim.viewBoxWidth = viewBoxWidth;\n    parsedDim.viewBoxHeight = viewBoxHeight;\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n    if ((x || y) && element.parentNode.nodeName !== '#document') {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    // seems unused.\n    // parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElementNS(fabric.svgNS, 'g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      el.removeAttribute('x');\n      el.removeAttribute('y');\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).slice(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      var cssAttrs = extend(\n        getGlobalStylesForElement(element, svgUid),\n        fabric.parseStyleAttribute(element)\n      );\n      ownAttributes = extend(\n        ownAttributes,\n        cssAttrs\n      );\n      if (cssAttrs[cPath]) {\n        element.setAttribute(cPath, cssAttrs[cPath]);\n      }\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes[fSize]) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        var styleContents = styles[i].textContent;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        // recovers all the rule in this form `body { style code... }`\n        // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = styleContents.split('}');\n        // remove empty rules.\n        rules = rules.filter(function(rule) { return rule.trim(); });\n        // at this point we have hopefully an array of rules `body { style code... `\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.split('{'),\n              ruleObj = { }, declaration = match[1].trim(),\n              propertyValuePairs = declaration.split(';').filter(function(pair) { return pair.trim(); });\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(':'),\n                property = pair[0].trim(),\n                value = pair[1].trim();\n            ruleObj[property] = value;\n          }\n          rule = match[0].trim();\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      var parser = new fabric.window.DOMParser(),\n          doc = parser.parseFromString(string.trim(), 'text/xml');\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions, doc) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n  this.doc = doc;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, el, 'fill');\n      _this.resolveGradient(obj, el, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj, el);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property], regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return;\n    }\n    regex.lastIndex = 0;\n    var id = regex.exec(value)[1];\n    regex.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, el, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      var opacityAttr = el.getAttribute(property + '-opacity');\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\n      obj.set(property, gradient);\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj, usingElement) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      // move the clipPath tag as sibling to the real element that is using it\n      var clipPathTag = clipPath[0].parentNode;\n      var clipPathOwner = usingElement;\n      while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\n        clipPathOwner = clipPathOwner.parentNode;\n      }\n      clipPathOwner.parentNode.appendChild(clipPathTag);\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      if (clipPath.clipPath) {\n        this.resolveClipPath(clipPath, clipPathOwner);\n      }\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n    else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'],\n      skewMap = ['ns', 'nesw', 'ew', 'nwse'],\n      controls = {},\n      LEFT = 'left', TOP = 'top', RIGHT = 'right', BOTTOM = 'bottom', CENTER = 'center',\n      opposite = {\n        top: BOTTOM,\n        bottom: TOP,\n        left: RIGHT,\n        right: LEFT,\n        center: CENTER,\n      }, radiansToDegrees = fabric.util.radiansToDegrees,\n      sign = (Math.sign || function(x) { return ((x > 0) - (x < 0)) || +x; });\n\n  /**\n   * Combine control position and object angle to find the control direction compared\n   * to the object center.\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\n   * @param {fabric.Control} control the control class\n   * @return {Number} 0 - 7 a quadrant number\n   */\n  function findCornerQuadrant(fabricObject, control) {\n    var cornerAngle = fabricObject.angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n    return Math.round((cornerAngle % 360) / 45);\n  }\n\n  function fireEvent(eventName, options) {\n    var target = options.transform.target,\n        canvas = target.canvas,\n        canvasOptions = fabric.util.object.clone(options);\n    canvasOptions.target = target;\n    canvas && canvas.fire('object:' + eventName, canvasOptions);\n    target.fire(eventName, options);\n  }\n\n  /**\n   * Inspect event and fabricObject properties to understand if the scaling action\n   * @param {Event} eventData from the user action\n   * @param {fabric.Object} fabricObject the fabric object about to scale\n   * @return {Boolean} true if scale is proportional\n   */\n  function scaleIsProportional(eventData, fabricObject) {\n    var canvas = fabricObject.canvas, uniScaleKey = canvas.uniScaleKey,\n        uniformIsToggled = eventData[uniScaleKey];\n    return (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled);\n  }\n\n  /**\n   * Checks if transform is centered\n   * @param {Object} transform transform data\n   * @return {Boolean} true if transform is centered\n   */\n  function isTransformCentered(transform) {\n    return transform.originX === CENTER && transform.originY === CENTER;\n  }\n\n  /**\n   * Inspect fabricObject to understand if the current scaling action is allowed\n   * @param {fabric.Object} fabricObject the fabric object about to scale\n   * @param {String} by 'x' or 'y' or ''\n   * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n   * @return {Boolean} true if scaling is not allowed at current conditions\n   */\n  function scalingIsForbidden(fabricObject, by, scaleProportionally) {\n    var lockX = fabricObject.lockScalingX, lockY = fabricObject.lockScalingY;\n    if (lockX && lockY) {\n      return true;\n    }\n    if (!by && (lockX || lockY) && scaleProportionally) {\n      return true;\n    }\n    if (lockX && by === 'x') {\n      return true;\n    }\n    if (lockY && by === 'y') {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * return the correct cursor style for the scale action\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function scaleCursorStyleHandler(eventData, control, fabricObject) {\n    var notAllowed = 'not-allowed',\n        scaleProportionally = scaleIsProportional(eventData, fabricObject),\n        by = '';\n    if (control.x !== 0 && control.y === 0) {\n      by = 'x';\n    }\n    else if (control.x === 0 && control.y !== 0) {\n      by = 'y';\n    }\n    if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n      return notAllowed;\n    }\n    var n = findCornerQuadrant(fabricObject, control);\n    return scaleMap[n] + '-resize';\n  }\n\n  /**\n   * return the correct cursor style for the skew action\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function skewCursorStyleHandler(eventData, control, fabricObject) {\n    var notAllowed = 'not-allowed';\n    if (control.x !== 0 && fabricObject.lockSkewingY) {\n      return notAllowed;\n    }\n    if (control.y !== 0 && fabricObject.lockSkewingX) {\n      return notAllowed;\n    }\n    var n = findCornerQuadrant(fabricObject, control) % 4;\n    return skewMap[n] + '-resize';\n  }\n\n  /**\n   * Combine skew and scale style handlers to cover fabric standard use case\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function scaleSkewCursorStyleHandler(eventData, control, fabricObject) {\n    if (eventData[fabricObject.canvas.altActionKey]) {\n      return controls.skewCursorStyleHandler(eventData, control, fabricObject);\n    }\n    return controls.scaleCursorStyleHandler(eventData, control, fabricObject);\n  }\n\n  /**\n   * Inspect event, control and fabricObject to return the correct action name\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} an action name\n   */\n  function scaleOrSkewActionName(eventData, control, fabricObject) {\n    var isAlternative = eventData[fabricObject.canvas.altActionKey];\n    if (control.x === 0) {\n      // then is scaleY or skewX\n      return isAlternative ? 'skewX' : 'scaleY';\n    }\n    if (control.y === 0) {\n      // then is scaleY or skewX\n      return isAlternative ? 'skewY' : 'scaleX';\n    }\n  }\n\n  /**\n   * Find the correct style for the control that is used for rotation.\n   * this function is very simple and it just take care of not-allowed or standard cursor\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function rotationStyleHandler(eventData, control, fabricObject) {\n    if (fabricObject.lockRotation) {\n      return 'not-allowed';\n    }\n    return control.cursorStyle;\n  }\n\n  function commonEventInfo(eventData, transform, x, y) {\n    return {\n      e: eventData,\n      transform: transform,\n      pointer: {\n        x: x,\n        y: y,\n      }\n    };\n  }\n\n  /**\n   * Wrap an action handler with saving/restoring object position on the transform.\n   * this is the code that permits to objects to keep their position while transforming.\n   * @param {Function} actionHandler the function to wrap\n   * @return {Function} a function with an action handler signature\n   */\n  function wrapWithFixedAnchor(actionHandler) {\n    return function(eventData, transform, x, y) {\n      var target = transform.target, centerPoint = target.getCenterPoint(),\n          constraint = target.translateToOriginPoint(centerPoint, transform.originX, transform.originY),\n          actionPerformed = actionHandler(eventData, transform, x, y);\n      target.setPositionByOrigin(constraint, transform.originX, transform.originY);\n      return actionPerformed;\n    };\n  }\n\n  /**\n   * Wrap an action handler with firing an event if the action is performed\n   * @param {Function} actionHandler the function to wrap\n   * @return {Function} a function with an action handler signature\n   */\n  function wrapWithFireEvent(eventName, actionHandler) {\n    return function(eventData, transform, x, y) {\n      var actionPerformed = actionHandler(eventData, transform, x, y);\n      if (actionPerformed) {\n        fireEvent(eventName, commonEventInfo(eventData, transform, x, y));\n      }\n      return actionPerformed;\n    };\n  }\n\n  /**\n   * Transforms a point described by x and y in a distance from the top left corner of the object\n   * bounding box.\n   * @param {Object} transform\n   * @param {String} originX\n   * @param {String} originY\n   * @param {number} x\n   * @param {number} y\n   * @return {Fabric.Point} the normalized point\n   */\n  function getLocalPoint(transform, originX, originY, x, y) {\n    var target = transform.target,\n        control = target.controls[transform.corner],\n        zoom = target.canvas.getZoom(),\n        padding = target.padding / zoom,\n        localPoint = target.toLocalPoint(new fabric.Point(x, y), originX, originY);\n    if (localPoint.x >= padding) {\n      localPoint.x -= padding;\n    }\n    if (localPoint.x <= -padding) {\n      localPoint.x += padding;\n    }\n    if (localPoint.y >= padding) {\n      localPoint.y -= padding;\n    }\n    if (localPoint.y <= padding) {\n      localPoint.y += padding;\n    }\n    localPoint.x -= control.offsetX;\n    localPoint.y -= control.offsetY;\n    return localPoint;\n  }\n\n  /**\n   * Detect if the fabric object is flipped on one side.\n   * @param {fabric.Object} target\n   * @return {Boolean} true if one flip, but not two.\n   */\n  function targetHasOneFlip(target) {\n    return target.flipX !== target.flipY;\n  }\n\n  /**\n   * Utility function to compensate the scale factor when skew is applied on both axes\n   * @private\n   */\n  function compensateScaleForSkew(target, oppositeSkew, scaleToCompensate, axis, reference) {\n    if (target[oppositeSkew] !== 0) {\n      var newDim = target._getTransformedDimensions()[axis];\n      var newValue = reference / newDim * target[scaleToCompensate];\n      target.set(scaleToCompensate, newValue);\n    }\n  }\n\n  /**\n   * Action handler for skewing on the X axis\n   * @private\n   */\n  function skewObjectX(eventData, transform, x, y) {\n    var target = transform.target,\n        // find how big the object would be, if there was no skewX. takes in account scaling\n        dimNoSkew = target._getTransformedDimensions(0, target.skewY),\n        localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\n        // the mouse is in the center of the object, and we want it to stay there.\n        // so the object will grow twice as much as the mouse.\n        // this makes the skew growth to localPoint * 2 - dimNoSkew.\n        totalSkewSize = Math.abs(localPoint.x * 2) - dimNoSkew.x,\n        currentSkew = target.skewX, newSkew;\n    if (totalSkewSize < 2) {\n      // let's make it easy to go back to position 0.\n      newSkew = 0;\n    }\n    else {\n      newSkew = radiansToDegrees(\n        Math.atan2((totalSkewSize / target.scaleX), (dimNoSkew.y / target.scaleY))\n      );\n      // now we have to find the sign of the skew.\n      // it mostly depend on the origin of transformation.\n      if (transform.originX === LEFT && transform.originY === BOTTOM) {\n        newSkew = -newSkew;\n      }\n      if (transform.originX === RIGHT && transform.originY === TOP) {\n        newSkew = -newSkew;\n      }\n      if (targetHasOneFlip(target)) {\n        newSkew = -newSkew;\n      }\n    }\n    var hasSkewed = currentSkew !== newSkew;\n    if (hasSkewed) {\n      var dimBeforeSkewing = target._getTransformedDimensions().y;\n      target.set('skewX', newSkew);\n      compensateScaleForSkew(target, 'skewY', 'scaleY', 'y', dimBeforeSkewing);\n    }\n    return hasSkewed;\n  }\n\n  /**\n   * Action handler for skewing on the Y axis\n   * @private\n   */\n  function skewObjectY(eventData, transform, x, y) {\n    var target = transform.target,\n        // find how big the object would be, if there was no skewX. takes in account scaling\n        dimNoSkew = target._getTransformedDimensions(target.skewX, 0),\n        localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\n        // the mouse is in the center of the object, and we want it to stay there.\n        // so the object will grow twice as much as the mouse.\n        // this makes the skew growth to localPoint * 2 - dimNoSkew.\n        totalSkewSize = Math.abs(localPoint.y * 2) - dimNoSkew.y,\n        currentSkew = target.skewY, newSkew;\n    if (totalSkewSize < 2) {\n      // let's make it easy to go back to position 0.\n      newSkew = 0;\n    }\n    else {\n      newSkew = radiansToDegrees(\n        Math.atan2((totalSkewSize / target.scaleY), (dimNoSkew.x / target.scaleX))\n      );\n      // now we have to find the sign of the skew.\n      // it mostly depend on the origin of transformation.\n      if (transform.originX === LEFT && transform.originY === BOTTOM) {\n        newSkew = -newSkew;\n      }\n      if (transform.originX === RIGHT && transform.originY === TOP) {\n        newSkew = -newSkew;\n      }\n      if (targetHasOneFlip(target)) {\n        newSkew = -newSkew;\n      }\n    }\n    var hasSkewed = currentSkew !== newSkew;\n    if (hasSkewed) {\n      var dimBeforeSkewing = target._getTransformedDimensions().x;\n      target.set('skewY', newSkew);\n      compensateScaleForSkew(target, 'skewX', 'scaleX', 'x', dimBeforeSkewing);\n    }\n    return hasSkewed;\n  }\n\n  /**\n   * Wrapped Action handler for skewing on the Y axis, takes care of the\n   * skew direction and determine the correct transform origin for the anchor point\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function skewHandlerX(eventData, transform, x, y) {\n    // step1 figure out and change transform origin.\n    // if skewX > 0 and originY bottom we anchor on right\n    // if skewX > 0 and originY top we anchor on left\n    // if skewX < 0 and originY bottom we anchor on left\n    // if skewX < 0 and originY top we anchor on right\n    // if skewX is 0, we look for mouse position to understand where are we going.\n    var target = transform.target, currentSkew = target.skewX, originX, originY = transform.originY;\n    if (target.lockSkewingX) {\n      return false;\n    }\n    if (currentSkew === 0) {\n      var localPointFromCenter = getLocalPoint(transform, CENTER, CENTER, x, y);\n      if (localPointFromCenter.x > 0) {\n        // we are pulling right, anchor left;\n        originX = LEFT;\n      }\n      else {\n        // we are pulling right, anchor right\n        originX = RIGHT;\n      }\n    }\n    else {\n      if (currentSkew > 0) {\n        originX = originY === TOP ? LEFT : RIGHT;\n      }\n      if (currentSkew < 0) {\n        originX = originY === TOP ? RIGHT : LEFT;\n      }\n      // is the object flipped on one side only? swap the origin.\n      if (targetHasOneFlip(target)) {\n        originX = originX === LEFT ? RIGHT : LEFT;\n      }\n    }\n\n    // once we have the origin, we find the anchor point\n    transform.originX = originX;\n    var finalHandler = wrapWithFireEvent('skewing', wrapWithFixedAnchor(skewObjectX));\n    return finalHandler(eventData, transform, x, y);\n  }\n\n  /**\n   * Wrapped Action handler for skewing on the Y axis, takes care of the\n   * skew direction and determine the correct transform origin for the anchor point\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function skewHandlerY(eventData, transform, x, y) {\n    // step1 figure out and change transform origin.\n    // if skewY > 0 and originX left we anchor on top\n    // if skewY > 0 and originX right we anchor on bottom\n    // if skewY < 0 and originX left we anchor on bottom\n    // if skewY < 0 and originX right we anchor on top\n    // if skewY is 0, we look for mouse position to understand where are we going.\n    var target = transform.target, currentSkew = target.skewY, originY, originX = transform.originX;\n    if (target.lockSkewingY) {\n      return false;\n    }\n    if (currentSkew === 0) {\n      var localPointFromCenter = getLocalPoint(transform, CENTER, CENTER, x, y);\n      if (localPointFromCenter.y > 0) {\n        // we are pulling down, anchor up;\n        originY = TOP;\n      }\n      else {\n        // we are pulling up, anchor down\n        originY = BOTTOM;\n      }\n    }\n    else {\n      if (currentSkew > 0) {\n        originY = originX === LEFT ? TOP : BOTTOM;\n      }\n      if (currentSkew < 0) {\n        originY = originX === LEFT ? BOTTOM : TOP;\n      }\n      // is the object flipped on one side only? swap the origin.\n      if (targetHasOneFlip(target)) {\n        originY = originY === TOP ? BOTTOM : TOP;\n      }\n    }\n\n    // once we have the origin, we find the anchor point\n    transform.originY = originY;\n    var finalHandler = wrapWithFireEvent('skewing', wrapWithFixedAnchor(skewObjectY));\n    return finalHandler(eventData, transform, x, y);\n  }\n\n  /**\n   * Action handler for rotation and snapping, without anchor point.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   * @private\n   */\n  function rotationWithSnapping(eventData, transform, x, y) {\n    var t = transform,\n        target = t.target,\n        pivotPoint = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n    if (target.lockRotation) {\n      return false;\n    }\n\n    var lastAngle = Math.atan2(t.ey - pivotPoint.y, t.ex - pivotPoint.x),\n        curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x),\n        angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n        hasRotated = true;\n\n    if (target.snapAngle > 0) {\n      var snapAngle  = target.snapAngle,\n          snapThreshold  = target.snapThreshold || snapAngle,\n          rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n          leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n      if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n        angle = leftAngleLocked;\n      }\n      else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n        angle = rightAngleLocked;\n      }\n    }\n\n    // normalize angle to positive value\n    if (angle < 0) {\n      angle = 360 + angle;\n    }\n    angle %= 360;\n\n    hasRotated = target.angle !== angle;\n    target.angle = angle;\n    return hasRotated;\n  }\n\n  /**\n   * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @param {Object} options additional information for scaling\n   * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n   * @return {Boolean} true if some change happened\n   * @private\n   */\n  function scaleObject(eventData, transform, x, y, options) {\n    options = options || {};\n    var target = transform.target,\n        lockScalingX = target.lockScalingX, lockScalingY = target.lockScalingY,\n        by = options.by, newPoint, scaleX, scaleY, dim,\n        scaleProportionally = scaleIsProportional(eventData, target),\n        forbidScaling = scalingIsForbidden(target, by, scaleProportionally),\n        signX, signY, gestureScale = transform.gestureScale;\n\n    if (forbidScaling) {\n      return false;\n    }\n    if (gestureScale) {\n      scaleX = transform.scaleX * gestureScale;\n      scaleY = transform.scaleY * gestureScale;\n    }\n    else {\n      newPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y);\n      // use of sign: We use sign to detect change of direction of an action. sign usually change when\n      // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n      // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n      // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n      // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n      signX = by !== 'y' ? sign(newPoint.x) : 1;\n      signY = by !== 'x' ? sign(newPoint.y) : 1;\n      if (!transform.signX) {\n        transform.signX = signX;\n      }\n      if (!transform.signY) {\n        transform.signY = signY;\n      }\n\n      if (target.lockScalingFlip &&\n        (transform.signX !== signX || transform.signY !== signY)\n      ) {\n        return false;\n      }\n\n      dim = target._getTransformedDimensions();\n      // missing detection of flip and logic to switch the origin\n      if (scaleProportionally && !by) {\n        // uniform scaling\n        var distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n            original = transform.original,\n            originalDistance = Math.abs(dim.x * original.scaleX / target.scaleX) +\n              Math.abs(dim.y * original.scaleY / target.scaleY),\n            scale = distance / originalDistance;\n        scaleX = original.scaleX * scale;\n        scaleY = original.scaleY * scale;\n      }\n      else {\n        scaleX = Math.abs(newPoint.x * target.scaleX / dim.x);\n        scaleY = Math.abs(newPoint.y * target.scaleY / dim.y);\n      }\n      // if we are scaling by center, we need to double the scale\n      if (isTransformCentered(transform)) {\n        scaleX *= 2;\n        scaleY *= 2;\n      }\n      if (transform.signX !== signX && by !== 'y') {\n        transform.originX = opposite[transform.originX];\n        scaleX *= -1;\n        transform.signX = signX;\n      }\n      if (transform.signY !== signY && by !== 'x') {\n        transform.originY = opposite[transform.originY];\n        scaleY *= -1;\n        transform.signY = signY;\n      }\n    }\n    // minScale is taken are in the setter.\n    var oldScaleX = target.scaleX, oldScaleY = target.scaleY;\n    if (!by) {\n      !lockScalingX && target.set('scaleX', scaleX);\n      !lockScalingY && target.set('scaleY', scaleY);\n    }\n    else {\n      // forbidden cases already handled on top here.\n      by === 'x' && target.set('scaleX', scaleX);\n      by === 'y' && target.set('scaleY', scaleY);\n    }\n    return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n  }\n\n  /**\n   * Generic scaling logic, to scale from corners either equally or freely.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scaleObjectFromCorner(eventData, transform, x, y) {\n    return scaleObject(eventData, transform, x, y);\n  }\n\n  /**\n   * Scaling logic for the X axis.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scaleObjectX(eventData, transform, x, y) {\n    return scaleObject(eventData, transform, x, y , { by: 'x' });\n  }\n\n  /**\n   * Scaling logic for the Y axis.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scaleObjectY(eventData, transform, x, y) {\n    return scaleObject(eventData, transform, x, y , { by: 'y' });\n  }\n\n  /**\n   * Composed action handler to either scale Y or skew X\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scalingYOrSkewingX(eventData, transform, x, y) {\n    // ok some safety needed here.\n    if (eventData[transform.target.canvas.altActionKey]) {\n      return controls.skewHandlerX(eventData, transform, x, y);\n    }\n    return controls.scalingY(eventData, transform, x, y);\n  }\n\n  /**\n   * Composed action handler to either scale X or skew Y\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scalingXOrSkewingY(eventData, transform, x, y) {\n    // ok some safety needed here.\n    if (eventData[transform.target.canvas.altActionKey]) {\n      return controls.skewHandlerY(eventData, transform, x, y);\n    }\n    return controls.scalingX(eventData, transform, x, y);\n  }\n\n  /**\n   * Action handler to change textbox width\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function changeWidth(eventData, transform, x, y) {\n    var target = transform.target, localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\n        strokePadding = target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n        multiplier = isTransformCentered(transform) ? 2 : 1,\n        oldWidth = target.width,\n        newWidth = Math.abs(localPoint.x * multiplier / target.scaleX) - strokePadding;\n    target.set('width', Math.max(newWidth, 0));\n    return oldWidth !== newWidth;\n  }\n\n  /**\n   * Action handler\n   * @private\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if the translation occurred\n   */\n  function dragHandler(eventData, transform, x, y) {\n    var target = transform.target,\n        newLeft = x - transform.offsetX,\n        newTop = y - transform.offsetY,\n        moveX = !target.get('lockMovementX') && target.left !== newLeft,\n        moveY = !target.get('lockMovementY') && target.top !== newTop;\n    moveX && target.set('left', newLeft);\n    moveY && target.set('top', newTop);\n    if (moveX || moveY) {\n      fireEvent('moving', commonEventInfo(eventData, transform, x, y));\n    }\n    return moveX || moveY;\n  }\n\n  controls.scaleCursorStyleHandler = scaleCursorStyleHandler;\n  controls.skewCursorStyleHandler = skewCursorStyleHandler;\n  controls.scaleSkewCursorStyleHandler = scaleSkewCursorStyleHandler;\n  controls.rotationWithSnapping = wrapWithFireEvent('rotating', wrapWithFixedAnchor(rotationWithSnapping));\n  controls.scalingEqually = wrapWithFireEvent('scaling', wrapWithFixedAnchor( scaleObjectFromCorner));\n  controls.scalingX = wrapWithFireEvent('scaling', wrapWithFixedAnchor(scaleObjectX));\n  controls.scalingY = wrapWithFireEvent('scaling', wrapWithFixedAnchor(scaleObjectY));\n  controls.scalingYOrSkewingX = scalingYOrSkewingX;\n  controls.scalingXOrSkewingY = scalingXOrSkewingY;\n  controls.changeWidth = wrapWithFireEvent('resizing', wrapWithFixedAnchor(changeWidth));\n  controls.skewHandlerX = skewHandlerX;\n  controls.skewHandlerY = skewHandlerY;\n  controls.dragHandler = dragHandler;\n  controls.scaleOrSkewActionName = scaleOrSkewActionName;\n  controls.rotationStyleHandler = rotationStyleHandler;\n  controls.fireEvent = fireEvent;\n  controls.wrapWithFixedAnchor = wrapWithFixedAnchor;\n  controls.wrapWithFireEvent = wrapWithFireEvent;\n  controls.getLocalPoint = getLocalPoint;\n  fabric.controlsUtils = controls;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      degreesToRadians = fabric.util.degreesToRadians,\n      controls = fabric.controlsUtils;\n\n  /**\n   * Render a round control, as per fabric features.\n   * This function is written to respect object properties like transparentCorners, cornerSize\n   * cornerColor, cornerStrokeColor\n   * plus the addition of offsetY and offsetX.\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @param {Number} left x coordinate where the control center should be\n   * @param {Number} top y coordinate where the control center should be\n   * @param {Object} styleOverride override for fabric.Object controls style\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\n   */\n  function renderCircleControl (ctx, left, top, styleOverride, fabricObject) {\n    styleOverride = styleOverride || {};\n    var xSize = this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n        ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n        transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n          styleOverride.transparentCorners : fabricObject.transparentCorners,\n        methodName = transparentCorners ? 'stroke' : 'fill',\n        stroke = !transparentCorners && (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n        myLeft = left,\n        myTop = top, size;\n    ctx.save();\n    ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor;\n    ctx.strokeStyle = styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor;\n    // as soon as fabric react v5, remove ie11, use proper ellipse code.\n    if (xSize > ySize) {\n      size = xSize;\n      ctx.scale(1.0, ySize / xSize);\n      myTop = top * xSize / ySize;\n    }\n    else if (ySize > xSize) {\n      size = ySize;\n      ctx.scale(xSize / ySize, 1.0);\n      myLeft = left * ySize / xSize;\n    }\n    else {\n      size = xSize;\n    }\n    // this is still wrong\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.arc(myLeft, myTop, size / 2, 0, 2 * Math.PI, false);\n    ctx[methodName]();\n    if (stroke) {\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Render a square control, as per fabric features.\n   * This function is written to respect object properties like transparentCorners, cornerSize\n   * cornerColor, cornerStrokeColor\n   * plus the addition of offsetY and offsetX.\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @param {Number} left x coordinate where the control center should be\n   * @param {Number} top y coordinate where the control center should be\n   * @param {Object} styleOverride override for fabric.Object controls style\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\n   */\n  function renderSquareControl(ctx, left, top, styleOverride, fabricObject) {\n    styleOverride = styleOverride || {};\n    var xSize = this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n        ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n        transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n          styleOverride.transparentCorners : fabricObject.transparentCorners,\n        methodName = transparentCorners ? 'stroke' : 'fill',\n        stroke = !transparentCorners && (\n          styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor\n        ), xSizeBy2 = xSize / 2, ySizeBy2 = ySize / 2;\n    ctx.save();\n    ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor;\n    ctx.strokeStyle = styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor;\n    // this is still wrong\n    ctx.lineWidth = 1;\n    ctx.translate(left, top);\n    ctx.rotate(degreesToRadians(fabricObject.angle));\n    // this does not work, and fixed with ( && ) does not make sense.\n    // to have real transparent corners we need the controls on upperCanvas\n    // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n    ctx[methodName + 'Rect'](-xSizeBy2, -ySizeBy2, xSize, ySize);\n    if (stroke) {\n      ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n    }\n    ctx.restore();\n  }\n\n  controls.renderCircleControl = renderCircleControl;\n  controls.renderSquareControl = renderSquareControl;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  function Control(options) {\n    for (var i in options) {\n      this[i] = options[i];\n    }\n  }\n\n  fabric.Control = Control;\n\n  fabric.Control.prototype = /** @lends fabric.Control.prototype */ {\n\n    /**\n     * keep track of control visibility.\n     * mainly for backward compatibility.\n     * if you do not want to see a control, you can remove it\n     * from the controlset.\n     * @type {Boolean}\n     * @default true\n     */\n    visible: true,\n\n    /**\n     * Name of the action that the control will likely execute.\n     * This is optional. FabricJS uses to identify what the user is doing for some\n     * extra optimizations. If you are writing a custom control and you want to know\n     * somewhere else in the code what is going on, you can use this string here.\n     * you can also provide a custom getActionName if your control run multiple actions\n     * depending on some external state.\n     * default to scale since is the most common, used on 4 corners by default\n     * @type {String}\n     * @default 'scale'\n     */\n    actionName: 'scale',\n\n    /**\n     * Drawing angle of the control.\n     * NOT used for now, but name marked as needed for internal logic\n     * example: to reuse the same drawing function for different rotated controls\n     * @type {Number}\n     * @default 0\n     */\n    angle: 0,\n\n    /**\n     * Relative position of the control. X\n     * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n     * of the bounding box.\n     * @type {Number}\n     * @default 0\n     */\n    x: 0,\n\n    /**\n     * Relative position of the control. Y\n     * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n     * of the bounding box.\n     * @type {Number}\n     * @default 0\n     */\n    y: 0,\n\n    /**\n     * Horizontal offset of the control from the defined position. In pixels\n     * Positive offset moves the control to the right, negative to the left.\n     * It used when you want to have position of control that does not scale with\n     * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n     * the boundindbox, with an offset of 30 pixels vertically. Those 30 pixels will\n     * stay 30 pixels no matter how the object is big. Another example is having 2\n     * controls in the corner, that stay in the same position when the object scale.\n     * of the bounding box.\n     * @type {Number}\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset of the control from the defined position. In pixels\n     * Positive offset moves the control to the bottom, negative to the top.\n     * @type {Number}\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Sets the length of the control. If null, defaults to object's cornerSize.\n     * Expects both sizeX and sizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    sizeX: null,\n\n    /**\n     * Sets the height of the control. If null, defaults to object's cornerSize.\n     * Expects both sizeX and sizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    sizeY: null,\n\n    /**\n     * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n     * Expects both touchSizeX and touchSizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    touchSizeX: null,\n\n    /**\n     * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n     * Expects both touchSizeX and touchSizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    touchSizeY: null,\n\n    /**\n     * Css cursor style to display when the control is hovered.\n     * if the method `cursorStyleHandler` is provided, this property is ignored.\n     * @type {String}\n     * @default 'crosshair'\n     */\n    cursorStyle: 'crosshair',\n\n    /**\n     * If controls has an offsetY or offsetX, draw a line that connects\n     * the control to the bounding box\n     * @type {Boolean}\n     * @default false\n     */\n    withConnection: false,\n\n    /**\n     * The control actionHandler, provide one to handle action ( control being moved )\n     * @param {Event} eventData the native mouse event\n     * @param {Object} transformData properties of the current transform\n     * @param {Number} x x position of the cursor\n     * @param {Number} y y position of the cursor\n     * @return {Boolean} true if the action/event modified the object\n     */\n    actionHandler: function(/* eventData, transformData, x, y */) { },\n\n    /**\n     * The control handler for mouse down, provide one to handle mouse down on control\n     * @param {Event} eventData the native mouse event\n     * @param {Object} transformData properties of the current transform\n     * @param {Number} x x position of the cursor\n     * @param {Number} y y position of the cursor\n     * @return {Boolean} true if the action/event modified the object\n     */\n    mouseDownHandler: function(/* eventData, transformData, x, y */) { },\n\n    /**\n     * The control mouseUpHandler, provide one to handle an effect on mouse up.\n     * @param {Event} eventData the native mouse event\n     * @param {Object} transformData properties of the current transform\n     * @param {Number} x x position of the cursor\n     * @param {Number} y y position of the cursor\n     * @return {Boolean} true if the action/event modified the object\n     */\n    mouseUpHandler: function(/* eventData, transformData, x, y */) { },\n\n    /**\n     * Returns control actionHandler\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Object} fabricObject on which the control is displayed\n     * @param {fabric.Control} control control for which the action handler is being asked\n     * @return {Function} the action handler\n     */\n    getActionHandler: function(/* eventData, fabricObject, control */) {\n      return this.actionHandler;\n    },\n\n    /**\n     * Returns control mouseDown handler\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Object} fabricObject on which the control is displayed\n     * @param {fabric.Control} control control for which the action handler is being asked\n     * @return {Function} the action handler\n     */\n    getMouseDownHandler: function(/* eventData, fabricObject, control */) {\n      return this.mouseDownHandler;\n    },\n\n    /**\n     * Returns control mouseUp handler\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Object} fabricObject on which the control is displayed\n     * @param {fabric.Control} control control for which the action handler is being asked\n     * @return {Function} the action handler\n     */\n    getMouseUpHandler: function(/* eventData, fabricObject, control */) {\n      return this.mouseUpHandler;\n    },\n\n    /**\n     * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n     * function you can pass one in the constructor\n     * the cursorStyle property\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Control} control the current control ( likely this)\n     * @param {fabric.Object} object on which the control is displayed\n     * @return {String}\n     */\n    cursorStyleHandler: function(eventData, control /* fabricObject */) {\n      return control.cursorStyle;\n    },\n\n    /**\n     * Returns the action name. The basic implementation just return the actionName property.\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Control} control the current control ( likely this)\n     * @param {fabric.Object} object on which the control is displayed\n     * @return {String}\n     */\n    getActionName: function(eventData, control /* fabricObject */) {\n      return control.actionName;\n    },\n\n    /**\n     * Returns controls visibility\n     * @param {fabric.Object} object on which the control is displayed\n     * @param {String} controlKey key where the control is memorized on the\n     * @return {Boolean}\n     */\n    getVisibility: function(fabricObject, controlKey) {\n      var objectVisibility = fabricObject._controlsVisibility;\n      if (objectVisibility && typeof objectVisibility[controlKey] !== 'undefined') {\n        return objectVisibility[controlKey];\n      }\n      return this.visible;\n    },\n\n    /**\n     * Sets controls visibility\n     * @param {Boolean} visibility for the object\n     * @return {Void}\n     */\n    setVisibility: function(visibility /* name, fabricObject */) {\n      this.visible = visibility;\n    },\n\n\n    positionHandler: function(dim, finalMatrix /*, fabricObject, currentControl */) {\n      var point = fabric.util.transformPoint({\n        x: this.x * dim.x + this.offsetX,\n        y: this.y * dim.y + this.offsetY }, finalMatrix);\n      return point;\n    },\n\n    /**\n     * Returns the coords for this control based on object values.\n     * @param {Number} objectAngle angle from the fabric object holding the control\n     * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n     *   isTouch is true)\n     * @param {Number} centerX x coordinate where the control center should be\n     * @param {Number} centerY y coordinate where the control center should be\n     * @param {boolean} isTouch true if touch corner, false if normal corner\n     */\n    calcCornerCoords: function(objectAngle, objectCornerSize, centerX, centerY, isTouch) {\n      var cosHalfOffset,\n          sinHalfOffset,\n          cosHalfOffsetComp,\n          sinHalfOffsetComp,\n          xSize = (isTouch) ? this.touchSizeX : this.sizeX,\n          ySize = (isTouch) ? this.touchSizeY : this.sizeY;\n      if (xSize && ySize && xSize !== ySize) {\n        // handle rectangular corners\n        var controlTriangleAngle = Math.atan2(ySize, xSize);\n        var cornerHypotenuse = Math.sqrt(xSize * xSize + ySize * ySize) / 2;\n        var newTheta = controlTriangleAngle - fabric.util.degreesToRadians(objectAngle);\n        var newThetaComp = Math.PI / 2 - controlTriangleAngle - fabric.util.degreesToRadians(objectAngle);\n        cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta);\n        sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta);\n        // use complementary angle for two corners\n        cosHalfOffsetComp = cornerHypotenuse * fabric.util.cos(newThetaComp);\n        sinHalfOffsetComp = cornerHypotenuse * fabric.util.sin(newThetaComp);\n      }\n      else {\n        // handle square corners\n        // use default object corner size unless size is defined\n        var cornerSize = (xSize && ySize) ? xSize : objectCornerSize;\n        /* 0.7071067812 stands for sqrt(2)/2 */\n        cornerHypotenuse = cornerSize * 0.7071067812;\n        // complementary angles are equal since they're both 45 degrees\n        var newTheta = fabric.util.degreesToRadians(45 - objectAngle);\n        cosHalfOffset = cosHalfOffsetComp = cornerHypotenuse * fabric.util.cos(newTheta);\n        sinHalfOffset = sinHalfOffsetComp = cornerHypotenuse * fabric.util.sin(newTheta);\n      }\n\n      return {\n        tl: {\n          x: centerX - sinHalfOffsetComp,\n          y: centerY - cosHalfOffsetComp,\n        },\n        tr: {\n          x: centerX + cosHalfOffset,\n          y: centerY - sinHalfOffset,\n        },\n        bl: {\n          x: centerX - cosHalfOffset,\n          y: centerY + sinHalfOffset,\n        },\n        br: {\n          x: centerX + sinHalfOffsetComp,\n          y: centerY + cosHalfOffsetComp,\n        },\n      };\n    },\n\n    /**\n    * Render function for the control.\n    * When this function runs the context is unscaled. unrotate. Just retina scaled.\n    * all the functions will have to translate to the point left,top before starting Drawing\n    * if they want to draw a control where the position is detected.\n    * left and top are the result of the positionHandler function\n    * @param {RenderingContext2D} ctx the context where the control will be drawn\n    * @param {Number} left position of the canvas where we are about to render the control.\n    * @param {Number} top position of the canvas where we are about to render the control.\n    * @param {Object} styleOverride\n    * @param {fabric.Object} fabricObject the object where the control is about to be rendered\n    */\n    render: function(ctx, left, top, styleOverride, fabricObject) {\n      styleOverride = styleOverride || {};\n      switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n        case 'circle':\n          fabric.controlsUtils.renderCircleControl.call(this, ctx, left, top, styleOverride, fabricObject);\n          break;\n        default:\n          fabric.controlsUtils.renderSquareControl.call(this, ctx, left, top, styleOverride, fabricObject);\n      }\n    },\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el, multiplier) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha * multiplier;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * A transform matrix to apply to the gradient before painting.\n     * Imported from svg gradients, is not applied with the current transform in the center.\n     * Before this transform is applied, the origin point is at the top left corner of the object\n     * plus the addition of offsetY and offsetX.\n     * @type Number[]\n     * @default null\n     */\n    gradientTransform: null,\n\n    /**\n     * coordinates units for coords.\n     * If `pixels`, the number of coords are in the same unit of width / height.\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n     * allowed values pixels or percentage.\n     * @type String\n     * @default 'pixels'\n     */\n    gradientUnits: 'pixels',\n\n    /**\n     * Gradient type linear or radial\n     * @type String\n     * @default 'pixels'\n     */\n    type: 'linear',\n\n    /**\n     * Constructor\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\n     * @param {Object} [options.type] gradient type linear or radial\n     * @param {Object} [options.gradientUnits] gradient units\n     * @param {Object} [options.offsetX] SVG import compatibility\n     * @param {Object} [options.offsetY] SVG import compatibility\n     * @param {Object[]} options.colorStops contains the colorstops.\n     * @param {Object} options.coords contains the coords of the gradient\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n      options.coords || (options.coords = { });\n\n      var coords, _this = this;\n\n      // sets everything, then coords and colorstops get sets again\n      Object.keys(options).forEach(function(option) {\n        _this[option] = options[option];\n      });\n\n      if (this.id) {\n        this.id += '_' + fabric.Object.__uid++;\n      }\n      else {\n        this.id = fabric.Object.__uid++;\n      }\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientUnits: this.gradientUnits,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object, options) {\n      var coords = clone(this.coords, true), i, len, options = options || {},\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = -this.offsetX, offsetY = -this.offsetY,\n          withViewport = !!options.additionalTransform,\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox';\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (gradientUnits === 'objectBoundingBox') {\n        offsetX /= object.width;\n        offsetY /= object.height;\n      }\n      else {\n        offsetX += object.width / 2;\n        offsetY += object.height / 2;\n      }\n      if (object.type === 'path' && this.gradientUnits !== 'percentage') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"' + gradientUnits + '\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ?\n        options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance, opacityAttr, svgOptions) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\n      if (isNaN(multiplier)) {\n        multiplier = 1;\n      }\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ?\n            'pixels' : 'percentage',\n          gradientTransform = el.getAttribute('gradientTransform') || '',\n          colorStops = [],\n          coords, i, offsetX = 0, offsetY = 0,\n          transformMatrix;\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n        coords = getLinearCoords(el);\n      }\n      else {\n        type = 'radial';\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\n      }\n\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\n\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\n\n      if (gradientUnits === 'pixels') {\n        offsetX = -instance.left;\n        offsetY = -instance.top;\n      }\n\n      var gradient = new fabric.Gradient({\n        id: el.getAttribute('id'),\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        gradientUnits: gradientUnits,\n        gradientTransform: transformMatrix,\n        offsetX: offsetX,\n        offsetY: offsetY,\n      });\n\n      return gradient;\n    }\n    /* _FROM_SVG_END_ */\n  });\n\n  /**\n   * @private\n   */\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\n    var propValue, finalValue;\n    Object.keys(options).forEach(function(prop) {\n      propValue = options[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      }\n      else if (propValue === '-Infinity') {\n        finalValue = 0;\n      }\n      else {\n        finalValue = parseFloat(options[prop], 10);\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\n            }\n          }\n        }\n      }\n      options[prop] = finalValue;\n    });\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img, isError) {\n          _this.source = img;\n          callback && callback(_this, isError);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // <img> element\n      if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = this.source;\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseFloat(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseFloat(offsetsAndBlur[2], 10) || 0,\n        blur: parseFloat(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?(\\d+(?:\\.\\d*)?(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n     * @type Array\n     * @example <caption>Default transform</caption>\n     * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n     * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n     * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio > 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? Math.max(1, fabric.devicePixelRatio) : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      var scaleRatio = fabric.devicePixelRatio;\n      this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\n      if (this.upperCanvasEl) {\n        this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\n      }\n    },\n\n    __initRetinaScaling: function(scaleRatio, canvas, context) {\n      canvas.setAttribute('width', this.width * scaleRatio);\n      canvas.setAttribute('height', this.height * scaleRatio);\n      context.scale(scaleRatio, scaleRatio);\n    },\n\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img, isError) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img, isError) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay. The first argument is the created image, the second argument is a flag indicating whether an error occurred or not.\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img, isError) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img, isError);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image, false);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n      this._originalCanvasStyle = this.lowerCanvasEl.style;\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles(this.contextTop);\n      }\n      this._initRetinaScaling();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transformation of this canvas instance\n     * @param {Array} vpt a Canvas 2D API transform matrix\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject,\n          backgroundObject = this.backgroundImage,\n          overlayObject = this.overlayImage,\n          object, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(true);\n      }\n      if (activeObject) {\n        activeObject.setCoords();\n      }\n      if (backgroundObject) {\n        backgroundObject.setCoords(true);\n      }\n      if (overlayObject) {\n        overlayObject.setCoords(true);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, the zoom centered around point\n     * meaning that following zoom to point with the same point will have the visual\n     * effect of the zoom originating from that point. The point won't move.\n     * It has nothing to do with canvas center or visual center of the viewport.\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.remove.apply(this, this.getObjects());\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothingEnabled);\n      this.fire('before:render', { ctx: ctx, });\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var fill = this[property + 'Color'], object = this[property + 'Image'],\n          v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\n      if (!fill && !object) {\n        return;\n      }\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive\n          ? fill.toLive(ctx, this)\n          : fill;\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n      if (object) {\n        ctx.save();\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     * @deprecated migrate to `getCenterPoint`\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * @return {fabric.Point} \n     */\n    getCenterPoint: function () {\n      return new fabric.Point(this.width / 2, this.height / 2);\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenterPoint().x, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenterPoint();\n      return this._centerObject(object, center);\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenterPoint(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint(center, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returns dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath && !clipPath.excludeFromExport) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = {}, bgImage = this.backgroundImage, overlayImage = this.overlayImage,\n          bgColor = this.backgroundColor, overlayColor = this.overlayColor;\n\n      if (bgColor && bgColor.toObject) {\n        if (!bgColor.excludeFromExport) {\n          data.background = bgColor.toObject(propertiesToInclude);\n        }\n      }\n      else if (bgColor) {\n        data.background = bgColor;\n      }\n\n      if (overlayColor && overlayColor.toObject) {\n        if (!overlayColor.excludeFromExport) {\n          data.overlay = overlayColor.toObject(propertiesToInclude);\n        }\n      }\n      else if (overlayColor) {\n        data.overlay = overlayColor;\n      }\n\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlayImage && !overlayImage.excludeFromExport) {\n        data.overlayImage = this._toObject(overlayImage, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'background');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlay');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function(prop) {\n            var fill = _this[prop + 'Color'];\n            if (fill && fill.toLive) {\n              var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\n                  object = {\n                    width: _this.width / (shouldTransform ? vpt[0] : 1),\n                    height: _this.height / (shouldTransform ? vpt[3] : 1)\n                  };\n              return fill.toSVG(\n                object,\n                { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\n              );\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = [];\n\n      this._objects.forEach(function add(object) {\n        objects.push(object);\n        if (object._objects) {\n          object._objects.forEach(add);\n        }\n      });\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\n          finalHeight = this.height;\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push(\n          '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2,\n          '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', filler, '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      // restore canvas style\n      this.lowerCanvasEl.classList.remove('lower-canvas');\n      fabric.util.setStyle(this.lowerCanvasEl, this._originalCanvasStyle);\n      delete this._originalCanvasStyle;\n      // restore canvas size to original size in case retina scaling was applied\n      this.lowerCanvasEl.setAttribute('width', this.width);\n      this.lowerCanvasEl.setAttribute('height', this.height);\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n  */\n\n  limitedToCanvasSize: false,\n\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles: function (ctx) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var canvas = this.canvas,\n        shadow = this.shadow,\n        ctx = canvas.contextTop,\n        zoom = canvas.getZoom();\n    if (canvas && canvas._isRetinaScaling()) {\n      zoom *= fabric.devicePixelRatio;\n    }\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  },\n\n  needsFullRender: function() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  },\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n  */\n  _isOutSideCanvas: function(pointer) {\n    return pointer.x < 0 || pointer.x > this.canvas.getWidth() || pointer.y < 0 || pointer.y > this.canvas.getHeight();\n  }\n});\n\n\n(function() {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Draws a straight line between last recorded point to current pointer\n     * Used for `shift` functionality\n     *\n     * @type boolean\n     * @default false\n     */\n    drawStraightLine: false,\n\n    /**\n     * The event modifier key that makes the brush draw a straight line.\n     * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n     * @type {'altKey' | 'shiftKey' | 'ctrlKey' | 'none' | undefined | null}\n     */\n    straightLineKey: 'shiftKey',\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    needsFullRender: function () {\n      return this.callSuper('needsFullRender') || this._hasStraightLine;\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Invoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this.drawStraightLine = options.e[this.straightLineKey];\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this.drawStraightLine = options.e[this.straightLineKey];\n      if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n        return;\n      }\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function(options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n      this.drawStraightLine = false;\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      if (this.drawStraightLine && this._points.length > 1) {\n        this._hasStraightLine = true;\n        this._points.pop();\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points = [];\n      this._setBrushStyles(this.canvas.contextTop);\n      this._setShadow();\n      this._hasStraightLine = false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     * @param {CanvasRenderingContext2D} [ctx]\n     */\n    _render: function(ctx) {\n      var i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n      ctx = ctx || this.canvas.contextTop;\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {(string|number)[][]} SVG path commands\n     */\n    convertPointsToSVGPath: function (points) {\n      var correction = this.width / 1000;\n      return fabric.util.getSmoothPathFromPoints(points, correction);\n    },\n\n    /**\n     * @private\n     * @param {(string|number)[][]} pathData SVG path commands\n     * @returns {boolean}\n     */\n    _isEmptySVGPath: function (pathData) {\n      var pathString = fabric.util.joinPath(pathData);\n      return pathString === 'M 0 0 Q 0 0 0 0 L 0 0';\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {(string|number)[][]} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.shadow = new fabric.Shadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate points array with the decimate value\n     */\n    decimatePoints: function(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n      var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\n          i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\n          cDistance;\n      for (i = 1; i < l - 1; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n      /**\n       * Add the last point from the original line to the end of the array.\n       * This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n       */\n      newPoints.push(points[l]);\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n      var pathData = this.convertPointsToSVGPath(this._points);\n      if (this._isEmptySVGPath(pathData)) {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.fire('before:path:created', { path: path });\n      this.canvas.add(path);\n      this.canvas.requestRenderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n\n  dot: function(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    }\n    else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && (circle.shadow = new fabric.Shadow(this.shadow));\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.set('shadow', new fabric.Shadow(this.shadow));\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern: function(ctx) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles: function(ctx) {\n    this.callSuper('_setBrushStyles', ctx);\n    ctx.strokeStyle = this.getPattern(ctx);\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      isTouchEvent = fabric.util.isTouchEvent;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified at the end of a transform or any change when statefull is true\n   * @fires object:rotating while an object is being rotated from the control\n   * @fires object:scaling while an object is being scaled by controls\n   * @fires object:moving while an object is being dragged\n   * @fires object:skewing while an object is being skewed from the controls\n   *\n   * @fires before:transform before a transform is is started\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created after a drawing operation ends and the path is added\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n   * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n   * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop:before before drop event. same native event. This is added to handle edge cases\n   * @fires drop\n   * @fires after:render at the end of the render process, receives the context in the callback\n   * @fires before:render at start the render process, receives the context in the callback\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * when dragged on the corners that normally would not do that.\n     * @type Boolean\n     * @default\n     * @since fabric 4.0 // changed name and default value\n     */\n    uniformScaling:      true,\n\n    /**\n     * Indicates which key switches uniform scaling.\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * totally wrong named. this sounds like `uniform scaling`\n     * if Canvas.uniformScaling is true, pressing this will set it to false\n     * and viceversa.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped. Target detection will return always undefined.\n     * click selection won't work anymore, events will fire with no targets.\n     * if something is selected before setting it to true, it will be deselected at the first click.\n     * area selection will still work. check the `selection` property too.\n     * if you deactivate both, you should look into staticCanvas.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * Keep track of the subTargets for Mouse Events\n     * @type fabric.Object[]\n     */\n    targets: [],\n\n    /**\n     * When the option is enabled, PointerEvent is used instead of MouseEvent.\n     * @type Boolean\n     * @default\n     */\n    enablePointerEvents: false,\n\n    /**\n     * Keep track of the hovered target\n     * @type fabric.Object\n     * @private\n     */\n    _hoveredTarget: null,\n\n    /**\n     * hold the list of nested targets hovered\n     * @type fabric.Object[]\n     * @private\n     */\n    _hoveredTargets: [],\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n        this.hasLostContext = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determines if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Array.isArray(this.selectionKey)) {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * also this should be something that will be migrated in the control properties.\n     * as ability to define the origin of the transformation that the control provide.\n     * @private\n     * @param {fabric.Object} target\n     * @param {String} action\n     * @param {Boolean} altKey\n     */\n    _shouldCenterTransform: function (target, action, altKey) {\n      if (!target) {\n        return;\n      }\n\n      var centerTransform;\n\n      if (action === 'scale' || action === 'scaleX' || action === 'scaleY' || action === 'resizing') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !altKey : altKey;\n    },\n\n    /**\n     * should disappear before release 4.0\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e, target) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n      var control = target.controls[corner];\n      return control.getActionName(e, control, target);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e), corner = target.__corner,\n          control = target.controls[corner],\n          actionHandler = (alreadySelected && corner) ?\n            control.getActionHandler(e, target, control) : fabric.controlsUtils.dragHandler,\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner),\n          altKey = e[this.centeredKey],\n          transform = {\n            target: target,\n            action: action,\n            actionHandler: actionHandler,\n            corner: corner,\n            scaleX: target.scaleX,\n            scaleY: target.scaleY,\n            skewX: target.skewX,\n            skewY: target.skewY,\n            // used by transation\n            offsetX: pointer.x - target.left,\n            offsetY: pointer.y - target.top,\n            originX: origin.x,\n            originY: origin.y,\n            ex: pointer.x,\n            ey: pointer.y,\n            lastX: pointer.x,\n            lastY: pointer.y,\n            // unsure they are useful anymore.\n            // left: target.left,\n            // top: target.top,\n            theta: degreesToRadians(target.angle),\n            // end of unsure\n            width: target.width * target.scaleX,\n            shiftKey: e.shiftKey,\n            altKey: altKey,\n            original: fabric.util.saveObjectTransform(target),\n          };\n\n      if (this._shouldCenterTransform(target, action, altKey)) {\n        transform.originX = 'center';\n        transform.originY = 'center';\n      }\n      transform.original.originX = origin.x;\n      transform.original.originY = origin.y;\n      this._currentTransform = transform;\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var selector = this._groupSelector,\n          viewportStart = new fabric.Point(selector.ex, selector.ey),\n          start = fabric.util.transformPoint(viewportStart, this.viewportTransform),\n          viewportExtent = new fabric.Point(selector.ex + selector.left, selector.ey + selector.top),\n          extent = fabric.util.transformPoint(viewportExtent, this.viewportTransform),\n          minX = Math.min(start.x, extent.x),\n          minY = Math.min(start.y, extent.y),\n          maxX = Math.max(start.x, extent.x),\n          maxY = Math.max(start.y, extent.y),\n          strokeOffset = this.selectionLineWidth / 2;\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n        ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      minX += strokeOffset;\n      minY += strokeOffset;\n      maxX -= strokeOffset;\n      maxY -= strokeOffset;\n      // selection border\n      fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n      ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs,\n          isTouch = isTouchEvent(e),\n          shouldLookForActive = (aObjects.length > 1 && !skipGroup) || aObjects.length === 1;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      // if we hit the corner of an activeObject, let's return that.\n      if (shouldLookForActive && activeObject._findTargetCorner(pointer, isTouch)) {\n        return activeObject;\n      }\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n          // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n          obj.containsPoint(pointer)\n      ) {\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      var retinaScaling = this.getRetinaScaling();\n      if (retinaScaling !== 1) {\n        pointer.x /= retinaScaling;\n        pointer.y /= retinaScaling;\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\n          lowerCanvasEl = this.lowerCanvasEl, upperCanvasEl = this.upperCanvasEl;\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (upperCanvasEl) {\n        upperCanvasEl.className = '';\n      }\n      else {\n        upperCanvasEl = this._createCanvasElement();\n        this.upperCanvasEl = upperCanvasEl;\n      }\n      fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(upperCanvasEl);\n\n      this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\n      this._applyCanvasStyle(upperCanvasEl);\n      this.contextTop = upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns context of top canvas where interactions are drawn\n     * @returns {CanvasRenderingContext2D}\n     */\n    getTopContext: function () {\n      return this.contextTop;\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (obj === this._hoveredTarget){\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [];\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', {\n            e: e,\n            target: oldObject\n          });\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', {\n            e: e,\n            target: object\n          });\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        somethingChanged && this.fire('selection:updated', {\n          e: e,\n          selected: added,\n          deselected: removed,\n        });\n      }\n      else if (objects.length > 0) {\n        this.fire('selection:created', {\n          e: e,\n          selected: added,\n        });\n      }\n      else if (oldObjects.length > 0) {\n        this.fire('selection:cleared', {\n          e: e,\n          deselected: removed,\n        });\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * This is a private method for now.\n     * This is supposed to be equivalent to setActiveObject but without firing\n     * any event. There is commitment to have this stay this way.\n     * This is the functional part of setActiveObject.\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * This is a private method for now.\n     * This is supposed to be equivalent to discardActiveObject but without firing\n     * any events. There is commitment to have this stay this way.\n     * This is the functional part of discardActiveObject.\n     * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n     * @param {Object} object to set as active\n     * @return {Boolean} true if the selection happened\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        fabric.util.addTransformToObject(instance, this._activeObject.calcOwnMatrix());\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n\n(function() {\n\n  var addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return e.button && (e.button === value - 1);\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._onDrop.bind(this);\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n\n      var _this = this;\n      this._hoveredTargets.forEach(function(_target){\n        _this.fire('mouse:out', { target: target, e: e });\n        _target && target.fire('mouseout', { e: e });\n      });\n      this._hoveredTargets = [];\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this._currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * `drop:before` is a an event that allow you to schedule logic\n     * before the `drop` event. Prefer `drop` event always, but if you need\n     * to run some drop-disabling logic on an event, since there is no way\n     * to handle event handlers ordering, use `drop:before`\n     * @param {Event} e\n     */\n    _onDrop: function (e) {\n      this._simpleEventHandler('drop:before', e);\n      return this._simpleEventHandler('drop', e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function(evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function(evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n      if (evt.isPrimary === false) {\n        return false;\n      }\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function(e) {\n      e.preventDefault();\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      // Unbind mousedown to prevent double triggers from touch devices\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function(e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      this.mainTouchId = null;\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      var _this = this;\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n      this._willAddMouseDown = setTimeout(function() {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n      if (!isClick) {\n        var targetWasActive = target === this._activeObject;\n        this._maybeGroupObjects(e);\n        if (!shouldRender) {\n          shouldRender = (\n            this._shouldRender(target) ||\n            (!targetWasActive && target === this._activeObject)\n          );\n        }\n      }\n      var corner, pointer;\n      if (target) {\n        corner = target._findTargetCorner(\n          this.getPointer(e, true),\n          fabric.util.isTouchEvent(e)\n        );\n        if (target.selectable && target !== this._activeObject && target.activeOn === 'up') {\n          this.setActiveObject(target, e);\n          shouldRender = true;\n        }\n        else {\n          var control = target.controls[corner],\n              mouseUpHandler = control && control.getMouseUpHandler(e, target, control);\n          if (mouseUpHandler) {\n            pointer = this.getPointer(e);\n            mouseUpHandler(e, transform, pointer.x, pointer.y);\n          }\n        }\n        target.isMoving = false;\n      }\n      // if we are ending up a transform on a different control or a new object\n      // fire the original mouse up from the corner that started the transform\n      if (transform && (transform.target !== target || transform.corner !== corner)) {\n        var originalControl = transform.target && transform.target.controls[transform.corner],\n            originalMouseUpHandler = originalControl && originalControl.getMouseUpHandler(e, target, control);\n        pointer = pointer || this.getPointer(e);\n        originalMouseUpHandler && originalMouseUpHandler(e, transform, pointer.x, pointer.y);\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      if (eventType === 'up') {\n        options.currentTarget = this.findTarget(e);\n        options.currentSubTargets = this.targets;\n      }\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n            action: transform.action,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: this._absolutePointer.x,\n          ey: this._absolutePointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable && target.activeOn === 'down') {\n          this.setActiveObject(target, e);\n        }\n        var corner = target._findTargetCorner(\n          this.getPointer(e, true),\n          fabric.util.isTouchEvent(e)\n        );\n        target.__corner = corner;\n        if (target === this._activeObject && (corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n          var control = target.controls[corner],\n              pointer = this.getPointer(e),\n              mouseDownHandler = control && control.getMouseDownHandler(e, target, control);\n          if (mouseDownHandler) {\n            mouseDownHandler(e, this._currentTransform, pointer.x, pointer.y);\n          }\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._absolutePointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var _hoveredTarget = this._hoveredTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _hoveredTarget,\n        evtOut: 'mouseout',\n        canvasEvtOut: 'mouse:out',\n        evtIn: 'mouseover',\n        canvasEvtIn: 'mouse:over',\n      });\n      for (var i = 0; i < length; i++){\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'mouseout',\n          evtIn: 'mouseover',\n        });\n      }\n      this._hoveredTarget = target;\n      this._hoveredTargets = this.targets.concat();\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      var _draggedoverTarget = this._draggedoverTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _draggedoverTarget,\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n      for (var i = 0; i < length; i++) {\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'dragleave',\n          evtIn: 'dragenter',\n        });\n      }\n      this._draggedoverTarget = target;\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = config.oldTarget, outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._performTransformAction(e, transform, pointer);\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          actionHandler = transform.actionHandler;\n          // this object could be created from the function in the control handlers\n\n\n      if (actionHandler) {\n        actionPerformed = actionHandler(e, transform, x, y);\n      }\n      if (action === 'drag' && actionPerformed) {\n        transform.target.isMoving = true;\n        this.setCursor(transform.target.moveCursor || this.moveCursor);\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: fabric.controlsUtils.fireEvent,\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n          // here we call findTargetCorner always with undefined for the touch parameter.\n          // we assume that if you are using a cursor you do not need to interact with\n          // the bigger touch area.\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        if (target.subTargetCheck){\n          // hoverCursor should come from top-most subTarget,\n          // so we walk the array backwards\n          this.targets.concat().reverse().map(function(_target){\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n        }\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      var control = target.controls[corner];\n      return control.cursorStyleHandler(e, control, target);\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        this._hoveredTargets = this.targets.concat();\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n        this._hoveredTargets = this.targets.concat();\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      // ISSUE 4115: should we consider subTargets here?\n      // this._hoveredTargets = [];\n      // this._hoveredTargets = this.targets.concat();\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2, true)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2, true) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1, null, true)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2, null, true))\n        ) {\n          group.push(currentObject);\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function(object) {\n          return !object.onSelect({ e: e });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        }\n        else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n    enlivenedObjects.forEach(function(obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove;\n    // remove parts i cannot set as options\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay;\n    // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n    this._setOptions(serialized);\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * Size of object's controlling corners when touch interaction is detected\n     * @type Number\n     * @default\n     */\n    touchCornerSize:               24,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgb(178,204,255)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgb(178,204,255)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * bigger number will make a thicker border\n     * border is 1, so this is basically a border thickness\n     * since there is no way to change the border itself.\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * this Property does not work on Text classes or drawing call that uses strokeText,fillText methods\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * When 'down', object is set to active on mousedown/touchstart\n     * When 'up', object is set to active on mouseup/touchend\n     * Experimental. Let's see if this breaks anything before supporting officially\n     * @private\n     * since 4.4.0\n     * @type String\n     * @default 'down'\n     */\n    activeOn:           'down',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * List of properties to consider for animating colors.\n     * @type Array\n     */\n    colorProperties: (\n      'fill stroke backgroundColor'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n          dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (this instanceof fabric.Text && this.path) {\n        shouldRedraw = true;\n        shouldResizeCanvas = true;\n        additionalWidth += this.getHeightOfLine(0) * this.zoomX;\n        additionalHeight += this.getHeightOfLine(0) * this.zoomY;\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var needFullTransform = (this.group && !this.group._transformDone) ||\n         (this.group && this.canvas && ctx === this.canvas.contextTop);\n      var m = this.calcTransformMatrix(!needFullTransform);\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeUniform:            this.strokeUniform,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath && !this.clipPath.excludeFromExport) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        // basically a check for [] === []\n        if (Array.isArray(object[prop]) && Array.isArray(prototype[prop])\n          && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      // if the object is a top level one, on the canvas, we go for simple aritmetic\n      // otherwise the complex method with angles will return approximations and decimals\n      // and will likely kill the cache when not needed\n      // https://github.com/fabricjs/fabric.js/issues/7157\n      if (!this.group) {\n        return {\n          scaleX: this.scaleX,\n          scaleY: this.scaleY,\n        };\n      }\n      // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n      var options = fabric.util.qrDecompose(this.calcTransformMatrix());\n      return { scaleX: Math.abs(options.scaleX), scaleY: Math.abs(options.scaleY) };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (!this.width && !this.height && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas || !this._cacheContext) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this._cacheContext = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an approximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an approximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' &&\n        this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.needsItsOwnCache() || (\n        this.objectCaching &&\n        (!this.group || !this.group.isOnACache())\n      );\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Object} clipPath\n     */\n    drawClipPathOnCache: function(ctx, clipPath) {\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (clipPath.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (clipPath.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      clipPath.transform(ctx);\n      ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n      ctx.drawImage(clipPath._cacheCanvas, -clipPath.cacheTranslationX, -clipPath.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx, this.clipPath);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    /**\n     * Prepare clipPath state and cache and draw it on instance's cache\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {fabric.Object} clipPath\n     */\n    _drawClipPath: function (ctx, clipPath) {\n      if (!clipPath) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      clipPath.canvas = this.canvas;\n      clipPath.shouldCache();\n      clipPath._transformDone = true;\n      clipPath.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx, clipPath);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && this._cacheContext && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && this._cacheContext && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      var stroke = decl.stroke;\n      if (stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        if (stroke.toLive) {\n          if (stroke.gradientUnits === 'percentage' || stroke.gradientTransform || stroke.patternTransform) {\n            // need to transform gradient in a pattern.\n            // this is a slow process. If you are hitting this codepath, and the object\n            // is not using caching, you should consider switching it on.\n            // we need a canvas as big as the current object caching canvas.\n            this._applyPatternForTransformedGradient(ctx, stroke);\n          }\n          else {\n            // is a simple gradient or pattern\n            ctx.strokeStyle = stroke.toLive(ctx, this);\n            this._applyPatternGradientTransform(ctx, stroke);\n          }\n        }\n        else {\n          // is a color\n          ctx.strokeStyle = decl.stroke;\n        }\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      var fill = decl.fill;\n      if (fill) {\n        if (fill.toLive) {\n          ctx.fillStyle = fill.toLive(ctx, this);\n          this._applyPatternGradientTransform(ctx, decl.fill);\n        }\n        else {\n          ctx.fillStyle = fill;\n        }\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     */\n    _setLineDash: function(ctx, dashArray) {\n      if (!dashArray || dashArray.length === 0) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      ctx.setLineDash(dashArray);\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * the context here is not transformed\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.flipX) {\n        options.angle -= 180;\n      }\n      ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n      if (styleOverride.forActiveSelection || this.group) {\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas, scaling,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1;\n      if (shadow.nonScaling) {\n        scaling = { scaleX: 1, scaleY: 1 };\n      }\n      else {\n        scaling = this.getObjectScaling();\n      }\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      if (filler.gradientUnits === 'percentage') {\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n      }\n      else {\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      }\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(/* ctx */) {\n\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._setFillStyles(ctx, this);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform && this.group) {\n        var scaling = this.getObjectScaling();\n        ctx.scale(1 / scaling.scaleX, 1 / scaling.scaleY);\n      }\n      else if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray);\n      this._setStrokeStyles(ctx, this);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     */\n    _applyPatternForTransformedGradient: function(ctx, filler) {\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          pCanvas = fabric.util.createCanvasElement(), pCtx, retinaScaling = this.canvas.getRetinaScaling(),\n          width = dims.x / this.scaleX / retinaScaling, height = dims.y / this.scaleY / retinaScaling;\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height); pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.scale(\n        dims.zoomX / this.scaleX / retinaScaling,\n        dims.zoomY / this.scaleY / retinaScaling\n      );\n      this._applyPatternGradientTransform(pCtx, filler);\n      pCtx.fillStyle = filler.toLive(ctx);\n      pCtx.fill();\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\n      ctx.scale(\n        retinaScaling * this.scaleX / dims.zoomX,\n        retinaScaling * this.scaleY / dims.zoomY\n      );\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * makes use of toCanvasElement.\n     * Once this method was based on toDataUrl and loadImage, so it also had a quality\n     * and format option. toCanvasElement is faster and produce no loss of quality.\n     * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n     * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n     * This method is sync now, but still support the callback because we did not want to break.\n     * When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {HTMLCanvasElement} Returns DOM element <canvas> with the fabric.Object\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalGroup = this.group,\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n      delete this.group;\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur,\n          width, height;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        if (shadow.nonScaling) {\n          scaling = { scaleX: 1, scaleY: 1 };\n        }\n        else {\n          scaling = this.getObjectScaling();\n        }\n        // consider non scaling shadow.\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\n      }\n      width = boundingRect.width + shadowOffset.x;\n      height = boundingRect.height + shadowOffset.y;\n      // if the current width/height is not an integer\n      // we need to make it so.\n      el.width = Math.ceil(width);\n      el.height = Math.ceil(height);\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.set('canvas', originalCanvas);\n      if (originalGroup) {\n        this.group = originalGroup;\n      }\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return arguments.length > 1 ? Array.from(arguments).includes(this.type) : this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    },\n\n    /**\n     * cancel instance's running animations\n     * override if necessary to dispose artifacts such as `clipPath`\n     */\n    dispose: function () {\n      if (fabric.runningAnimations) {\n        fabric.runningAnimations.cancelByTarget(this);\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  /**\n   * Defines which properties should be enlivened from the object passed to {@link fabric.Object._fromObject}\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type string[]\n   */\n  fabric.Object.ENLIVEN_PROPS = ['clipPath'];\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjectEnlivables(object, object, function () {\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function arrayFromCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var util = fabric.util,\n      degreesToRadians = util.degreesToRadians,\n      multiplyMatrices = util.multiplyTransformMatrices,\n      transformPoint = util.transformPoint;\n\n  util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are depending on control keys and padding the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from the controls positionHandler and are used\n     * to draw and locate controls\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcACoords();\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * includes padding. Used of object detection.\n     * set and refreshed with setCoords.\n     * @memberOf fabric.Object.prototype\n     */\n    lineCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * custom controls interface\n     * controls are added by default_controls.js\n     */\n    controls: { },\n\n    /**\n     * return correct set of coordinates for intersection\n     * this will return either aCoords or lineCoords.\n     * @param {Boolean} absolute will return aCoords if true or lineCoords\n     * @return {Object} {tl, tr, br, bl} points\n     */\n    _getCoords: function(absolute, calculate) {\n      if (calculate) {\n        return (absolute ? this.calcACoords() : this.calcLineCoords());\n      }\n      if (!this.aCoords || !this.lineCoords) {\n        this.setCoords(true);\n      }\n      return (absolute ? this.aCoords : this.lineCoords);\n    },\n\n    /**\n     * return correct set of coordinates for intersection\n     * this will return either aCoords or lineCoords.\n     * The coords are returned in an array.\n     * @return {Array} [tl, tr, br, bl] of points\n     */\n    getCoords: function(absolute, calculate) {\n      return arrayFromCoords(this._getCoords(absolute, calculate));\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          otherCoords = absolute ? other.aCoords : other.lineCoords,\n          i = 0, lines = other._getImageLines(otherCoords);\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var coords = this._getCoords(absolute, calculate),\n          lines = lines || this._getImageLines(coords),\n          xPoints = this._findCrossPoints(point, lines);\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate);\n      // if some point is on screen, the object is on screen.\n      if (points.some(function(point) {\n        return point.x <= pointBR.x && point.x >= pointTL.x &&\n        point.y <= pointBR.y && point.y >= pointTL.y;\n      })) {\n        return true;\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      var allPointsAreOutside = this.getCoords(true, calculate).every(function(point) {\n        return (point.x >= pointBR.x || point.x <= pointTL.x) &&\n        (point.y >= pointBR.y || point.y <= pointTL.y);\n      });\n      return allPointsAreOutside && this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n\n      var lines = {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n\n      // // debugging\n      // if (this.canvas.contextTop) {\n      //   this.canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n      //\n      //   this.canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n      //\n      //   this.canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n      //\n      //   this.canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n      // }\n\n      return lines;\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    calcLineCoords: function() {\n      var vpt = this.getViewportTransform(),\n          padding = this.padding, angle = degreesToRadians(this.angle),\n          cos = util.cos(angle), sin = util.sin(angle),\n          cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n          cosPMinusSinP = cosP - sinP, aCoords = this.calcACoords();\n\n      var lineCoords = {\n        tl: transformPoint(aCoords.tl, vpt),\n        tr: transformPoint(aCoords.tr, vpt),\n        bl: transformPoint(aCoords.bl, vpt),\n        br: transformPoint(aCoords.br, vpt),\n      };\n\n      if (padding) {\n        lineCoords.tl.x -= cosPMinusSinP;\n        lineCoords.tl.y -= cosPSinP;\n        lineCoords.tr.x += cosPSinP;\n        lineCoords.tr.y -= cosPMinusSinP;\n        lineCoords.bl.x -= cosPSinP;\n        lineCoords.bl.y += cosPMinusSinP;\n        lineCoords.br.x += cosPMinusSinP;\n        lineCoords.br.y += cosPSinP;\n      }\n\n      return lineCoords;\n    },\n\n    calcOCoords: function() {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          vpt = this.getViewportTransform(),\n          startMatrix = multiplyMatrices(vpt, translateMatrix),\n          finalMatrix = multiplyMatrices(startMatrix, rotateMatrix),\n          finalMatrix = multiplyMatrices(finalMatrix, [1 / vpt[0], 0, 0, 1 / vpt[3], 0, 0]),\n          dim = this._calculateCurrentDimensions(),\n          coords = {};\n      this.forEachControl(function(control, key, fabricObject) {\n        coords[key] = control.positionHandler(dim, finalMatrix, fabricObject);\n      });\n\n      // debug code\n      // var canvas = this.canvas;\n      // setTimeout(function() {\n      //   canvas.contextTop.clearRect(0, 0, 700, 700);\n      //   canvas.contextTop.fillStyle = 'green';\n      //   Object.keys(coords).forEach(function(key) {\n      //     var control = coords[key];\n      //     canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n      //   });\n      // }, 50);\n      return coords;\n    },\n\n    calcACoords: function() {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          finalMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2;\n      return {\n        // corners\n        tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n        tr: transformPoint({ x: w, y: -h }, finalMatrix),\n        bl: transformPoint({ x: -w, y: h }, finalMatrix),\n        br: transformPoint({ x: w, y: h }, finalMatrix)\n      };\n    },\n\n    /**\n     * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n     * oCoords are used to find the corners\n     * aCoords are used to quickly find an object on the canvas\n     * lineCoords are used to quickly find object during pointer events.\n     * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n     *\n     * @param {Boolean} [skipCorners] skip calculation of oCoords.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(skipCorners) {\n      this.aCoords = this.calcACoords();\n      // in case we are in a group, for how the inner group target check works,\n      // lineCoords are exactly aCoords. Since the vpt gets absorbed by the normalized pointer.\n      this.lineCoords = this.group ? this.aCoords : this.calcLineCoords();\n      if (skipCorners) {\n        return this;\n      }\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      this.oCoords = this.calcOCoords();\n      this._setCornerCoords && this._setCornerCoords();\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      return util.calcRotateMatrix(this);\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * There are some situation in which this is useful to avoid the fake rotation.\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      var matrix = this.calcOwnMatrix();\n      if (skipGroup || !this.group) {\n        return matrix;\n      }\n      var key = this.transformMatrixKey(skipGroup), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(false), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties, this matrix does not include the group transformation\n     * @return {Array} transform matrix for the object\n     */\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var tMatrix = this._calcTranslateMatrix(),\n          options = {\n            angle: this.angle,\n            translateX: tMatrix[4],\n            translateY: tMatrix[5],\n            scaleX: this.scaleX,\n            scaleY: this.scaleY,\n            skewX: this.skewX,\n            skewY: this.skewY,\n            flipX: this.flipX,\n            flipY: this.flipY,\n          };\n      cache.key = key;\n      cache.value = util.composeMatrix(options);\n      return cache.value;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions, dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimensions = this._getNonTransformedDimensions();\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      var bbox = util.sizeAfterTransform(dimX, dimY, {\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: skewX,\n        skewY: skewY,\n      });\n      return this._finalizeDimensions(bbox.x, bbox.y);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n\n    /*\n     * Calculate object dimensions for controls box, including padding and canvas zoom.\n     * and active selection\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = transformPoint(dim, vpt, true);\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else if (this.canvas) {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      return ['overline', 'underline', 'line-through'].filter(function(decoration) {\n        return style[decoration.replace('-', '')];\n      }).join(' ');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform +\n        (additionalTransform || '') + '\" ';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke, fill = this.fill, shadow = this.shadow,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        // we do not want to compare those.\n        if (key === 'canvas' || key === 'group') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer, forTouch) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines, keys = Object.keys(this.oCoords),\n          j = keys.length - 1, i;\n      this.__corner = 0;\n\n      // cycle in reverse order so we pick first the one on top\n      for (; j >= 0; j--) {\n        i = keys[j];\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        lines = this._getImageLines(forTouch ? this.oCoords[i].touchCorner : this.oCoords[i].corner);\n        // // debugging\n        //\n        // this.canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n        //\n        // this.canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n        //\n        // this.canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n        //\n        // this.canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Calls a function for each control. The function gets called,\n     * with the control, the object that is calling the iterator and the control's key\n     * @param {Function} fn function to iterate over the controls over\n     */\n    forEachControl: function(fn) {\n      for (var i in this.controls) {\n        fn(this.controls[i], i, this);\n      };\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * note: if we would switch to ROUND corner area, all of this would disappear.\n     * everything would resolve to a single point and a pythagorean theorem for the distance\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords;\n\n      for (var control in coords) {\n        var controlObject = this.controls[control];\n        coords[control].corner = controlObject.calcCornerCoords(\n          this.angle, this.cornerSize, coords[control].x, coords[control].y, false);\n        coords[control].touchCorner = controlObject.calcCornerCoords(\n          this.angle, this.touchCornerSize, coords[control].x, coords[control].y, true);\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          shouldStroke = false;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (hasControls) {\n        ctx.beginPath();\n        this.forEachControl(function(control, key, fabricObject) {\n          // in this moment, the ctx is centered on the object.\n          // width and height of the above function are the size of the bbox.\n          if (control.withConnection && control.getVisibility(fabricObject, key)) {\n            // reset movement for each control\n            shouldStroke = true;\n            ctx.moveTo(control.x * width, control.y * height);\n            ctx.lineTo(\n              control.x * width + control.offsetX,\n              control.y * height + control.offsetY\n            );\n          }\n        });\n        if (shouldStroke) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var bbox = fabric.util.sizeAfterTransform(this.width, this.height, options),\n          strokeWidth = this.strokeWidth,\n          strokeUniform = this.strokeUniform,\n          borderScaleFactor = this.borderScaleFactor,\n          width =\n            bbox.x + strokeWidth * (strokeUniform ? this.canvas.getZoom() : options.scaleX) + borderScaleFactor,\n          height =\n            bbox.y + strokeWidth * (strokeUniform ? this.canvas.getZoom() : options.scaleY) + borderScaleFactor;\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      ctx.save();\n      var retinaScaling = this.canvas.getRetinaScaling(), matrix, p;\n      ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray);\n      this.setCoords();\n      if (this.group) {\n        // fabricJS does not really support drawing controls inside groups,\n        // this piece of code here helps having at least the control in places.\n        // If an application needs to show some objects as selected because of some UI state\n        // can still call Object._renderControls() on any object they desire, independently of groups.\n        // using no padding, circular controls and hiding the rotating cursor is higly suggested,\n        matrix = this.group.calcTransformMatrix();\n      }\n      this.forEachControl(function(control, key, fabricObject) {\n        p = fabricObject.oCoords[key];\n        if (control.getVisibility(fabricObject, key)) {\n          if (matrix) {\n            p = fabric.util.transformPoint(p, matrix);\n          }\n          control.render(ctx, p.x, p.y, styleOverride, fabricObject);\n        }\n      });\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlKey) {\n      return this.controls[controlKey] && this.controls[controlKey].getVisibility(this, controlKey);\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlKey, visible) {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {};\n      }\n      this._controlsVisibility[controlKey] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.AnimationContext} context\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: object.left,\n      endValue: this.getCenterPoint().x,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.AnimationContext} context\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: object.top,\n      endValue: this.getCenterPoint().y,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.AnimationContext} context\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {fabric.AnimationContext | fabric.AnimationContext[]} animation context (or an array if passed multiple properties)\n   *\n   * As object \u2014 multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string \u2014 one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function () {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks, out = [];\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        out.push(this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks));\n      }\n      return out;\n    }\n    else {\n      return this._animate.apply(this, arguments);\n    }\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var propIsColor =\n      _this.colorProperties.indexOf(property) > -1 ||\n      (propPair && _this.colorProperties.indexOf(propPair[1]) > -1);\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (!propIsColor) {\n      if (~to.indexOf('=')) {\n        to = currentValue + parseFloat(to.replace('=', ''));\n      }\n      else {\n        to = parseFloat(to);\n      }\n    }\n\n    var _options = {\n      target: this,\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function(value, valueProgress, timeProgress) {\n        return options.abort.call(_this, value, valueProgress, timeProgress);\n      },\n      onChange: function (value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function (value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    };\n\n    if (propIsColor) {\n      return fabric.util.animateColor(_options.startValue, _options.endValue, _options.duration, _options);\n    }\n    else {\n      return fabric.util.animate(_options);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 };\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n\n      var p = this.calcLinePoints();\n      ctx.moveTo(p.x1, p.y1);\n      ctx.lineTo(p.x2, p.y2);\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      degreesToRadians = fabric.util.degreesToRadians;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * degrees of start of the circle.\n     * probably will change to degrees in next major version\n     * @type Number 0 - 359\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * probably will change to degrees in next major version\n     * @type Number 1 - 360\n     * @default 360\n     */\n    endAngle: 360,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % 360;\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var start = degreesToRadians(this.startAngle),\n            end = degreesToRadians(this.endAngle),\n            radius = this.radius,\n            startX = fabric.util.cos(start) * radius,\n            startY = fabric.util.sin(start) * radius,\n            endX = fabric.util.cos(end) * radius,\n            endY = fabric.util.sin(end) * radius,\n            largeFlag = angle > 180 ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + radius + ' ' + radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        degreesToRadians(this.startAngle),\n        degreesToRadians(this.endAngle),\n        false\n      );\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {void}\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {void}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    parsedAttributes.height  = parsedAttributes.height || 0;\n    parsedAttributes.width  = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      projectStrokeOnPoints = fabric.util.projectStrokeOnPoints;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * WARNING: Feature in progress\n     * Calculate the exact bounding box taking in account strokeWidth on acute angles\n     * this will be turned to true by default on fabric 6.0\n     * maybe will be left in as an optimization since calculations may be slow\n     * @deprecated\n     * @type Boolean\n     * @default false\n     */\n    exactBoundingBox: false,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     */\n    _projectStrokeOnPoints: function () {\n      return projectStrokeOnPoints(this.points, this, true);\n    },\n\n    _setPositionDimensions: function(options) {\n      var calcDim = this._calcDimensions(options), correctLeftTop,\n          correctSize = this.exactBoundingBox ? this.strokeWidth : 0;\n      this.width = calcDim.width - correctSize;\n      this.height = calcDim.height - correctSize;\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin(\n          {\n            // this looks bad, but is one way to keep it optional for now.\n            x: calcDim.left - this.strokeWidth / 2 + correctSize / 2,\n            y: calcDim.top - this.strokeWidth / 2 + correctSize / 2\n          },\n          'left',\n          'top',\n          this.originX,\n          this.originY\n        );\n      }\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2 + correctSize / 2,\n        y: calcDim.top + this.height / 2 + correctSize / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, width, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.exactBoundingBox ? this._projectStrokeOnPoints() : this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElementGenerator = function(_class) {\n    return function(element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n      options || (options = { });\n\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      projectStrokeOnPoints = fabric.util.projectStrokeOnPoints;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     */\n    _projectStrokeOnPoints: function () {\n      return projectStrokeOnPoints(this.points, this);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @return {void}\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function (path, options) {\n      options = clone(options || {});\n      delete options.path;\n      this.callSuper('initialize', options);\n      this._setPath(path || [], options);\n    },\n\n    /**\n    * @private\n    * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n    * @param {Object} [options] Options object\n    */\n    _setPath: function (path, options) {\n      this.path = fabric.util.makePathSimpler(\n        Array.isArray(path) ? path : fabric.util.parsePath(path)\n      );\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options || {});\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              current[3] + l,\n              current[4] + t\n            );\n            x = current[3];\n            y = current[4];\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = fabric.util.joinPath(this.path);\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              current[1],\n              current[2],\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        if (object.clipPath) {\n          fabric.util.enlivenObjects([object.clipPath], function(elivenedObjects) {\n            path.clipPath = elivenedObjects[0];\n            callback && callback(path);\n          });\n        }\n        else {\n          callback && callback(path);\n        }\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     */\n    _updateObjectsACoords: function() {\n      var skipControls = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(skipControls);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          skipControls = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(skipControls);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      var nested = !!this.group;\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        if (nested) {\n          // if this group is inside another group, we need to pre transform the object\n          fabric.util.removeTransformFromObject(object, this.group.calcTransformMatrix());\n        }\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.dirty = true;\n      if (nested) {\n        this.group.addWithUpdate();\n      }\n      else {\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects\n        .filter(function (obj) {\n          return !obj.excludeFromExport;\n        })\n        .map(function (obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (fabric.Object.prototype.willDrawShadow.call(this)) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx, this.clipPath);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Restores original state of each of group objects (original state is that which was before group was created).\n     * if the nested boolean is true, the original state will be restored just for the\n     * first group and not for all the group chain\n     * @private\n     * @param {Boolean} nested tell the function to restore object state up to the parent group and not more\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      var groupMatrix = this.calcOwnMatrix();\n      this._objects.forEach(function(object) {\n        // instead of using _this = this;\n        fabric.util.addTransformToObject(object, groupMatrix);\n        delete object.group;\n        object.setCoords();\n      });\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    dispose: function () {\n      this.callSuper('dispose');\n      this.forEachObject(function (object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var skipControls = true;\n      this.forEachObject(function(object) {\n        object.setCoords(skipControls);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop, coords,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        coords = o.calcACoords();\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(coords[prop].x);\n          aY.push(coords[prop].y);\n        }\n        o.aCoords = coords;\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function(reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function() {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\n            'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [\n        opacity,\n        this.getSvgFilter(),\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    var objects = object.objects,\n        options = fabric.util.object.clone(object, true);\n    delete options.objects;\n    if (typeof objects === 'string') {\n      // it has to be an url or something went wrong.\n      fabric.loadSVGFromURL(objects, function (elements) {\n        var group = fabric.util.groupSVGElements(elements, object, objects);\n        var clipPath = options.clipPath;\n        delete options.clipPath;\n        group.set(options);\n        if (clipPath) {\n          fabric.util.enlivenObjects([clipPath], function(elivenedObjects) {\n            group.clipPath = elivenedObjects[0];\n            callback && callback(group);\n          });\n        }\n        else {\n          callback && callback(group);\n        }\n      });\n      return;\n    }\n    fabric.util.enlivenObjects(objects, function (enlivenedObjects) {\n      fabric.util.enlivenObjectEnlivables(object, options, function () {\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Indicates whether this canvas will use image smoothing when painting this image.\n     * Also influence if the cacheCanvas for this image uses imageSmoothing\n     * @since 4.0.0-beta.11\n     * @type Boolean\n     * @default\n     */\n    imageSmoothing: true,\n\n    /**\n     * Constructor\n     * Image can be initialized with any canvas drawable or a string.\n     * The string should be a url and will be loaded as an image.\n     * Canvas and Image element work out of the box, while videos require extra code to work.\n     * Please check video element events for seeking.\n     * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal filters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function () {\n      this.callSuper('dispose');\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Get the crossOrigin value (of the corresponding image element)\n     */\n    getCrossOrigin: function() {\n      return this._originalElement && (this._originalElement.crossOrigin || null);\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          crossOrigin: this.getCrossOrigin(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg, element = this._element,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '', imageRendering = '';\n      if (!element) {\n        return [];\n      }\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      if (!this.imageSmoothing) {\n        imageRendering = '\" image-rendering=\"optimizeSpeed';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', element.width || element.naturalWidth,\n        '\" height=\"', element.height || element.height,\n        imageRendering,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @param {String} [options.crossOrigin] crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img, isError) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this, isError);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothing);\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * it will set the imageSmoothing for the draw operation\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothing);\n      fabric.Object.prototype.drawCacheOnCanvas.call(this, ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return this.needsItsOwnCache();\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element;\n      if (!elementToDraw) {\n        return;\n      }\n      var scaleX = this._filterScalingX, scaleY = this._filterScalingY,\n          w = this.width, h = this.height, min = Math.min, max = Math.max,\n          // crop values cannot be lesser than 0.\n          cropX = max(this.cropX, 0), cropY = max(this.cropY, 0),\n          elWidth = elementToDraw.naturalWidth || elementToDraw.width,\n          elHeight = elementToDraw.naturalHeight || elementToDraw.height,\n          sX = cropX * scaleX,\n          sY = cropY * scaleY,\n          // the width height cannot exceed element width/height, starting from the crop offset.\n          sW = min(w * scaleX, elWidth - sX),\n          sH = min(h * scaleY, elHeight - sY),\n          x = -w / 2, y = -h / 2,\n          maxDestW = min(w, elWidth / scaleX - cropX),\n          maxDestH = min(h, elHeight / scaleY - cropY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n    },\n\n    /**\n     * needed to check if image needs resize\n     * @private\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, isError) {\n      if (isError) {\n        callback && callback(null, true);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjectEnlivables(object, object, function () {\n            var image = new fabric.Image(img, object);\n            callback(image, false);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument). Second argument is a boolean indicating if an error occurred or not.\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img, isError) {\n      callback && callback(new fabric.Image(img, imgOptions), isError);\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat(\n      'x y width height preserveAspectRatio xlink:href crossOrigin image-rendering'.split(' ')\n    );\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    return this.rotate(this._getAngleValueForStraighten());\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   */\n  fxStraightenObject: function (object) {\n    return object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the texture to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n     * to save some calculation\n     * @type Boolean\n     * @default true\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     * @type String\n     * @default\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     * @type String\n     * @default\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     * @type Number\n     * @default\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter (one of \"multiply\", \"mask\")\n     * @type String\n     * @default\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 0.25\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * contrast value, range from -1 to 1.\n     * @param {Number} contrast\n     * @default 0\n     */\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 1\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Saturation value, from -1 to 1.\n     * Increases/decreases the color saturation.\n     * A value of 0 has no effect.\n     * \n     * @param {Number} saturation\n     * @default\n     */\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Vibrance filter class\n   * @class fabric.Image.filters.Vibrance\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Vibrance#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Vibrance({\n   *   vibrance: 1\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Vibrance = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Vibrance.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Vibrance',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uVibrance;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float max = max(color.r, max(color.g, color.b));\\n' +\n        'float avg = (color.r + color.g + color.b) / 3.0;\\n' +\n        'float amt = (abs(max - avg) * 2.0) * uVibrance;\\n' +\n        'color.r += max != color.r ? (max - color.r) * amt : 0.00;\\n' +\n        'color.g += max != color.g ? (max - color.g) * amt : 0.00;\\n' +\n        'color.b += max != color.b ? (max - color.b) * amt : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Vibrance value, from -1 to 1.\n     * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n     * A value of 0 has no effect.\n     * \n     * @param {Number} vibrance\n     * @default\n     */\n    vibrance: 0,\n\n    mainParameter: 'vibrance',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Vibrance.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.vibrance=0] Vibrance value for the image (between -1 and 1)\n     */\n\n    /**\n     * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.vibrance === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.vibrance, i, max, avg, amt;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        amt = ((Math.abs(max - avg) * 2 / 255) * adjust);\n        data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uVibrance: gl.getUniformLocation(program, 'uVibrance'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Vibrance} Instance of fabric.Image.filters.Vibrance\n   */\n  fabric.Image.filters.Vibrance.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range between 0 and 1.\n     * @type Number\n     * @default\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   gamma: [1, 0.5, 2.1]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var additionalProps =\n    ('fontFamily fontWeight fontSize text underline overline linethrough' +\n    ' textAlign fontStyle lineHeight textBackgroundColor charSpacing styles' +\n    ' direction path pathStartOffset pathSide pathAlign').split(' ');\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n      'path',\n      'pathStartOffset',\n      'pathSide',\n      'pathAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat(additionalProps),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat(additionalProps),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * fabric.Path that the text should follow.\n     * since 4.6.0 the path will be drawn automatically.\n     * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n     * if you want it to be hidden, assign visible = false to the path.\n     * This feature is in BETA, and SVG import/export is not yet supported.\n     * @type fabric.Path\n     * @example\n     * var textPath = new fabric.Text('Text on a path', {\n     *     top: 150,\n     *     left: 150,\n     *     textAlign: 'center',\n     *     charSpacing: -50,\n     *     path: new fabric.Path('M 0 0 C 50 -100 150 -100 200 0', {\n     *         strokeWidth: 1,\n     *         visible: false\n     *     }),\n     *     pathSide: 'left',\n     *     pathStartOffset: 0\n     * });\n     * @default\n     */\n    path:               null,\n\n    /**\n     * Offset amount for text path starting position\n     * Only used when text has a path\n     * @type Number\n     * @default\n     */\n    pathStartOffset:               0,\n\n    /**\n     * Which side of the path the text should be drawn on.\n     * Only used when text has a path\n     * @type {String} 'left|right'\n     * @default\n     */\n    pathSide:               'left',\n\n    /**\n     * How text is aligned to the path. This property determines\n     * the perpendicular position of each character relative to the path.\n     * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n     * This feature is in BETA, and its behavior may change\n     * @type String\n     * @default\n     */\n    pathAlign:               'baseline',\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - character numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoid creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, styles only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n     * determine the direction of the text.\n     * This has to be set manually together with textAlign and originX for proper\n     * experience.\n     * some interesting link for the future\n     * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n     * @since 4.5.0\n     * @type {String} 'ltr|rtl'\n     * @default\n     */\n    direction: 'ltr',\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      if (this.path) {\n        this.setPathInfo();\n      }\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * If text has a path, it will add the extra information needed\n     * for path and text calculations\n     * @return {fabric.Text} thisArg\n     */\n    setPathInfo: function() {\n      var path = this.path;\n      if (path) {\n        path.segmentsInfo = fabric.util.getPathSegmentsInfo(path.path);\n      }\n    },\n\n    /**\n     * Return a context for measurement of text string.\n     * if created it gets stored for reuse\n     * this is for internal use, please do not use it\n     * @private\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      if (this.path) {\n        this.width = this.path.width;\n        this.height = this.path.height;\n      }\n      else {\n        this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n        this.height = this.calcTextHeight();\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var path = this.path;\n      path && !path.isNotVisible() && path._render(ctx);\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetical';\n      if (this.path) {\n        switch (this.pathAlign) {\n          case 'center':\n            ctx.textBaseline = 'middle';\n            break;\n          case 'ascender':\n            ctx.textBaseline = 'top';\n            break;\n          case 'descender':\n            ctx.textBaseline = 'bottom';\n            break;\n        }\n      }\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          lineTopOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor, path = this.path,\n          drawStart;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (path) {\n            ctx.save();\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\n            ctx.rotate(charBox.angle);\n            ctx.fillStyle = currentColor;\n            currentColor && ctx.fillRect(\n              -charBox.width / 2,\n              -heightOfLine / this.lineHeight * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight\n            );\n            ctx.restore();\n          }\n          else if (currentColor !== lastColor) {\n            drawStart = leftOffset + lineLeftOffset + boxStart;\n            if (this.direction === 'rtl') {\n              drawStart = this.width - drawStart - boxWidth;\n            }\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor && !path) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            drawStart,\n            lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length),\n          positionInPath = 0, startingPoint, totalPathLength, path = this.path,\n          reverse = this.pathSide === 'right';\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      if (path) {\n        totalPathLength = path.segmentsInfo[path.segmentsInfo.length - 1].length;\n        startingPoint = fabric.util.getPointOnPath(path.path, 0, path.segmentsInfo);\n        startingPoint.x += path.pathOffset.x;\n        startingPoint.y += path.pathOffset.y;\n        switch (this.textAlign) {\n          case 'left':\n            positionInPath = reverse ? (totalPathLength - width) : 0;\n            break;\n          case 'center':\n            positionInPath = (totalPathLength - width) / 2;\n            break;\n          case 'right':\n            positionInPath = reverse ? 0 : (totalPathLength - width);\n            break;\n          //todo - add support for justify\n        }\n        positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n        for (i = reverse ? line.length - 1 : 0;\n          reverse ? i >= 0 : i < line.length;\n          reverse ? i-- : i++) {\n          graphemeInfo = lineBounds[i];\n          if (positionInPath > totalPathLength) {\n            positionInPath %= totalPathLength;\n          }\n          else if (positionInPath < 0) {\n            positionInPath += totalPathLength;\n          }\n          // it would probably much faster to send all the grapheme position for a line\n          // and calculate path position/angle at once.\n          this._setGraphemeOnPath(positionInPath, graphemeInfo, startingPoint);\n          positionInPath += graphemeInfo.kernedWidth;\n        }\n      }\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Calculate the angle  and the left,top position of the char that follow a path.\n     * It appends it to graphemeInfo to be reused later at rendering\n     * @private\n     * @param {Number} positionInPath to be measured\n     * @param {Object} graphemeInfo current grapheme box information\n     * @param {Object} startingPoint position of the point\n     */\n    _setGraphemeOnPath: function(positionInPath, graphemeInfo, startingPoint) {\n      var centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n          path = this.path;\n\n      // we are at currentPositionOnPath. we want to know what point on the path is.\n      var info = fabric.util.getPointOnPath(path.path, centerPosition, path.segmentsInfo);\n      graphemeInfo.renderLeft = info.x - startingPoint.x;\n      graphemeInfo.renderTop = info.y - startingPoint.y;\n      graphemeInfo.angle = info.angle + (this.pathSide ===  'right' ? Math.PI : 0);\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method fillText or strokeText.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} line Content of the line, splitted in an array by grapheme\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          path = this.path,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex) && !path,\n          isLtr = this.direction === 'ltr', sign = this.direction === 'ltr' ? 1 : -1,\n          drawingLeft, currentDirection = ctx.canvas.getAttribute('dir');\n      ctx.save();\n      if (currentDirection !== this.direction) {\n        ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n        ctx.direction = isLtr ? 'ltr' : 'rtl';\n        ctx.textAlign = isLtr ? 'left' : 'right';\n      }\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n        this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing || path;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += sign * (charBox.kernedWidth - charBox.width);\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = fabric.util.hasStyleChanged(actualStyle, nextStyle, false);\n        }\n        if (timeToRender) {\n          if (path) {\n            ctx.save();\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\n            ctx.rotate(charBox.angle);\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, -boxWidth / 2, 0, lineHeight);\n            ctx.restore();\n          }\n          else {\n            drawingLeft = left;\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, drawingLeft, top, lineHeight);\n          }\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += sign * boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     * @return {CanvasPattern} a pattern to use as fill/stroke style\n     */\n    _applyPatternGradientTransformText: function(filler) {\n      var pCanvas = fabric.util.createCanvasElement(), pCtx,\n          // TODO: verify compatibility with strokeUniform\n          width = this.width + this.strokeWidth, height = this.height + this.strokeWidth;\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height); pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.fillStyle = filler.toLive(pCtx);\n      this._applyPatternGradientTransform(pCtx, filler);\n      pCtx.fill();\n      return pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    handleFiller: function(ctx, property, filler) {\n      var offsetX, offsetY;\n      if (filler.toLive) {\n        if (filler.gradientUnits === 'percentage' || filler.gradientTransform || filler.patternTransform) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          offsetX = -this.width / 2;\n          offsetY = -this.height / 2;\n          ctx.translate(offsetX, offsetY);\n          ctx[property] = this._applyPatternGradientTransformText(filler);\n          return { offsetX: offsetX, offsetY: offsetY };\n        }\n        else {\n          // is a simple gradient or pattern\n          ctx[property] = filler.toLive(ctx, this);\n          return this._applyPatternGradientTransform(ctx, filler);\n        }\n      }\n      else {\n        // is a color\n        ctx[property] = filler;\n      }\n      return { offsetX: 0, offsetY: 0 };\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = this.strokeLineCap;\n      ctx.lineDashOffset = this.strokeDashOffset;\n      ctx.lineJoin = this.strokeLineJoin;\n      ctx.miterLimit = this.strokeMiterLimit;\n      return this.handleFiller(ctx, 'strokeStyle', decl.stroke);\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      return this.handleFiller(ctx, 'fillStyle', decl.fill);\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth,\n          fillOffsets, strokeOffsets;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      ctx.save();\n\n      shouldFill && (fillOffsets = this._setFillStyles(ctx, fullDecl));\n      shouldStroke && (strokeOffsets = this._setStrokeStyles(ctx, fullDecl));\n\n      ctx.font = this._getFontDeclaration(fullDecl);\n\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n      shouldFill && ctx.fillText(_char, left - fillOffsets.offsetX, top - fillOffsets.offsetY);\n      shouldStroke && ctx.strokeText(_char, left - strokeOffsets.offsetX, top - strokeOffsets.offsetY);\n      ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex),\n          lineDiff = this.width - lineWidth, textAlign = this.textAlign, direction = this.direction,\n          isEndOfWrapping, leftOffset = 0, isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n      if (textAlign === 'justify'\n        || (textAlign === 'justify-center' && !isEndOfWrapping)\n        || (textAlign === 'justify-right' && !isEndOfWrapping)\n        || (textAlign === 'justify-left' && !isEndOfWrapping)\n      ) {\n        return 0;\n      }\n      if (textAlign === 'center') {\n        leftOffset = lineDiff / 2;\n      }\n      if (textAlign === 'right') {\n        leftOffset = lineDiff;\n      }\n      if (textAlign === 'justify-center') {\n        leftOffset = lineDiff / 2;\n      }\n      if (textAlign === 'justify-right') {\n        leftOffset = lineDiff;\n      }\n      if (direction === 'rtl') {\n        leftOffset -= lineDiff;\n      }\n      return leftOffset;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex] !== undefined) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var lineInfo = this.measureLine(lineIndex);\n      var width = lineInfo.width;\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the character number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill, path = this.path,\n          charSpacing = this._getWidthOfCharSpacing(),\n          offsetY = this.offsets[type];\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if (path && currentDecoration && currentFill) {\n            ctx.save();\n            ctx.fillStyle = lastFill;\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\n            ctx.rotate(charBox.angle);\n            ctx.fillRect(\n              -charBox.kernedWidth / 2,\n              offsetY * _size + _dy,\n              charBox.kernedWidth,\n              this.fontSize / 15\n            );\n            ctx.restore();\n          }\n          else if (\n            (currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy)\n            && boxWidth > 0\n          ) {\n            var drawStart = leftOffset + lineLeftOffset + boxStart;\n            if (this.direction === 'rtl') {\n              drawStart = this.width - drawStart - boxWidth;\n            }\n            if (lastDecoration && lastFill) {\n              ctx.fillStyle = lastFill;\n              ctx.fillRect(\n                drawStart,\n                top + offsetY * size + dy,\n                boxWidth,\n                this.fontSize / 15\n              );\n            }\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        var drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        // verify if this can be fixed in JSDOM\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var allProperties = additionalProps.concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', allProperties);\n      obj.styles = fabric.util.stylesToArray(this.styles, this.text);\n      if (obj.path) {\n        obj.path = this.path.toObject();\n      }\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      var isAddingPath = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          if (_key === 'path') {\n            this.setPathInfo();\n          }\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n          isAddingPath = isAddingPath || _key === 'path';\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n        isAddingPath = key === 'path';\n      }\n      if (isAddingPath) {\n        this.setPathInfo();\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object plain js Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    var objectCopy = clone(object), path = object.path;\n    delete objectCopy.path;\n    return fabric.Object._fromObject('Text', objectCopy, function(textInstance) {\n      textInstance.styles = fabric.util.stylesFromArray(object.styles, object.text);\n      if (path) {\n        fabric.Object._fromObject('Path', path, function(pathInstance) {\n          textInstance.set('path', pathInstance);\n          callback(textInstance);\n        }, 'path');\n      }\n      else {\n        callback(textInstance);\n      }\n    }, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of text cursor color in editing mode.\n     * if not set (default) will take color from the text.\n     * if set to a color value that fabric can understand, it will\n     * be used instead of the color of the text at the current position.\n     * @type String\n     * @default\n     */\n    cursorColor: '',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * DOM container to append the hiddenTextarea.\n     * An alternative to attaching to the document.body.\n     * Useful to reduce laggish redraw of the full document.body tree and\n     * also with modals event capturing that won't let the textarea take focus.\n     * @type HTMLElement\n     * @default\n     */\n    hiddenTextareaContainer: null,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this._clearTextArea(ctx);\n      skipRestore || ctx.restore();\n    },\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n      this.clearContextTop(true);\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      if (this.direction === 'rtl') {\n        boundaries.left *= -1;\n      }\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.fillStyle = this.cursorColor || this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        var drawStart = boundaries.left + lineOffset + boxStart,\n            drawWidth = boxEnd - boxStart,\n            drawHeight = lineHeight, extraTop = 0;\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          drawHeight = 1;\n          extraTop = lineHeight;\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n        }\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - drawWidth;\n        }\n        ctx.fillRect(\n          drawStart,\n          boundaries.top + boundaries.topOffset + extraTop,\n          drawWidth,\n          drawHeight);\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * Unused from the library, is for the end user\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * if the text object has a pattern or gradient for filler, it will return that.\n     * Unused by the library, is for the end user\n     * @return {String | fabric.Gradient | fabric.Pattern} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    var styles = fabric.util.stylesFromArray(object.styles, object.text);\n    //copy object to prevent mutation\n    var objCopy = Object.assign({}, object, { styles: styles });\n    parseDecoration(objCopy);\n    if (objCopy.styles) {\n      for (var i in objCopy.styles) {\n        for (var j in objCopy.styles[i]) {\n          parseDecoration(objCopy.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', objCopy, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var text = this._text,\n          index     = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char     = text[index],\n          // wrong\n          reNonWord = fabric.reNonWord;\n\n      while (!reNonWord.test(_char) && index > 0 && index < text.length) {\n        index += direction;\n        _char = text[index];\n      }\n      if (reNonWord.test(_char)) {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      // regain focus\n      document.activeElement !== this.hiddenTextarea && this.hiddenTextarea.focus();\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          retinaScaling = this.canvas.getRetinaScaling(),\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width / retinaScaling,\n          upperCanvasHeight = upperCanvas.height / retinaScaling,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      var hiddenTextarea = this.hiddenTextarea;\n      this.selected = false;\n      this.isEditing = false;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (hiddenTextarea) {\n        hiddenTextarea.blur && hiddenTextarea.blur();\n        hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n      }\n      this.hiddenTextarea = null;\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Handle insertion of more consecutive style lines for when one or more\n     * newlines gets added to the text. Since current style needs to be shifted\n     * first we shift the current style of the number lines needed, then we add\n     * new lines from the last to the first.\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false,\n          isEndOfLine = this._unwrappedTextLines[lineIndex].length === charIndex;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          if (!(isEndOfLine && charIndex === 0)) {\n            delete this.styles[lineIndex][index];\n          }\n        }\n      }\n      var styleCarriedOver = false;\n      if (somethingAdded && !isEndOfLine) {\n        // if is end of line, the extra style we copied\n        // is probably not something we want\n        this.styles[lineIndex + qty] = newLineStyles;\n        styleCarriedOver = true;\n      }\n      if (styleCarriedOver) {\n        // skip the last line of since we already prepared it.\n        qty--;\n      }\n      // for the all the lines or all the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 0) {\n        if (copiedStyle && copiedStyle[qty - 1]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty - 1]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n        qty--;\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLength = 0;\n      // get an array of how many char per lines are being added.\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        }\n        else {\n          addedLines[linesLength]++;\n        }\n      }\n      // for the first line copy the style from the current char position.\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLength && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          // this test is required in order to close #6841\n          // when a pasted buffer begins with a newline then\n          // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n          // may be undefined for some reason\n          if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n            this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n          }\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    // handling of RTL: in order to get things work correctly,\n    // we assume RTL writing is mirrored compared to LTR writing.\n    // so in position detection we mirror the X offset, and when is time\n    // of rendering it, we mirror it again.\n    if (this.direction === 'rtl') {\n      mouseOffset.x = this.width * this.scaleX - mouseOffset.x + width;\n    }\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' padding\uFF70top: ' + style.fontSize + ';';\n\n    if (this.hiddenTextareaContainer) {\n      this.hiddenTextareaContainer.appendChild(this.hiddenTextarea);\n    }\n    else {\n      fabric.document.body.appendChild(this.hiddenTextarea);\n    }\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  keysMapRtl: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorLeft',\n    36: 'moveCursorRight',\n    37: 'moveCursorRight',\n    38: 'moveCursorUp',\n    39: 'moveCursorLeft',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    var keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      this[keyMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount,\n        selectionStart = this.selectionStart, selectionEnd = this.selectionEnd,\n        selection = selectionStart !== selectionEnd,\n        copiedStyle, removeFrom, removeTo;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(selectionStart, selectionEnd);\n      charDiff += selectionEnd - selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(selectionStart, selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(selectionStart, selectionStart + 1, false);\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(function() {\n          // this return an array of references, but that is fine since we are\n          // copying the style later.\n          return copiedStyle[0];\n        });\n      }\n      if (selection) {\n        removeFrom = selectionStart;\n        removeTo = selectionEnd;\n      }\n      else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = selectionEnd - removedText.length;\n        removeTo = selectionEnd;\n      }\n      else {\n        removeFrom = selectionEnd;\n        removeTo = selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        copiedStyle = fabric.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    }\n    else {\n      fabric.copiedTextStyle = null;\n    }\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length\n     + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(\n        this._toSVG(),\n        { reviver: reviver, noStyle: true, withShadow: true }\n      );\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = fabric.util.hasStyleChanged(actualStyle, nextStyle, true);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japanese\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false,\n          map = this._styleMap[lineIndex], mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languages?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n      // fix a difference between split and graphemeSplit\n      if (words.length === 0) {\n        words.push([]);\n      }\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n        if (lineWidth > desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = splitByGrapheme ? 0 : this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    _removeExtraneousStyles: function() {\n      var linesToKeep = {};\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    var styles = fabric.util.stylesFromArray(object.styles, object.text);\n    //copy object to prevent mutation\n    var objCopy = Object.assign({}, object, { styles: styles });\n    return fabric.Object._fromObject('Textbox', objCopy, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var controlsUtils = fabric.controlsUtils,\n      scaleSkewStyleHandler = controlsUtils.scaleSkewCursorStyleHandler,\n      scaleStyleHandler = controlsUtils.scaleCursorStyleHandler,\n      scalingEqually = controlsUtils.scalingEqually,\n      scalingYOrSkewingX = controlsUtils.scalingYOrSkewingX,\n      scalingXOrSkewingY = controlsUtils.scalingXOrSkewingY,\n      scaleOrSkewActionName = controlsUtils.scaleOrSkewActionName,\n      objectControls = fabric.Object.prototype.controls;\n\n  objectControls.ml = new fabric.Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.mr = new fabric.Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.mb = new fabric.Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.mt = new fabric.Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.tl = new fabric.Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.tr = new fabric.Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.bl = new fabric.Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.br = new fabric.Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.mtr = new fabric.Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: controlsUtils.rotationWithSnapping,\n    cursorStyleHandler: controlsUtils.rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: 'rotate',\n  });\n\n  if (fabric.Textbox) {\n    // this is breaking the prototype inheritance, no time / ideas to fix it.\n    // is important to document that if you want to have all objects to have a\n    // specific custom control, you have to add it to Object prototype and to Textbox\n    // prototype. The controls are shared as references. So changes to control `tr`\n    // can still apply to all objects if needed.\n    var textBoxControls = fabric.Textbox.prototype.controls = { };\n\n    textBoxControls.mtr = objectControls.mtr;\n    textBoxControls.tr = objectControls.tr;\n    textBoxControls.br = objectControls.br;\n    textBoxControls.tl = objectControls.tl;\n    textBoxControls.bl = objectControls.bl;\n    textBoxControls.mt = objectControls.mt;\n    textBoxControls.mb = objectControls.mb;\n\n    textBoxControls.mr = new fabric.Control({\n      x: 0.5,\n      y: 0,\n      actionHandler: controlsUtils.changeWidth,\n      cursorStyleHandler: scaleSkewStyleHandler,\n      actionName: 'resizing',\n    });\n\n    textBoxControls.ml = new fabric.Control({\n      x: -0.5,\n      y: 0,\n      actionHandler: controlsUtils.changeWidth,\n      cursorStyleHandler: scaleSkewStyleHandler,\n      actionName: 'resizing',\n    });\n  }\n})();\n\n"],
  "mappings": "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",
  "names": ["require_utils", "property", "duration", "fabric", "matrix", "match", "el", "elements", "attr", "pair", "prop", "obj", "i", "filters"]
}
